/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-21 09:14:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.RecipeProject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1681121315264L));
    _jspx_dependants.put("jar:file:/C:/Users/hgh04/Documents/JSPteam2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DanBeck/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("        \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"./resources/css/join.css\" >  -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body{\r\n");
      out.write("	margin:0;\r\n");
      out.write("	padding:0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table{	\r\n");
      out.write("	font-size : 1.0em;\r\n");
      out.write("	background-color: rgba(220,237,200,0.35);\r\n");
      out.write("	color: #aabb97;\r\n");
      out.write("	margin-left: auto;\r\n");
      out.write("	margin-right: auto;\r\n");
      out.write("	margin-top: 100px;\r\n");
      out.write("	margin-bottom: 100px;\r\n");
      out.write("	border-spacing: 15px;\r\n");
      out.write("	width: 40%;\r\n");
      out.write("	border: 2px solid #aabb97;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit], input[type=button], input[type=reset] {\r\n");
      out.write("	background:	#dcedc8;\r\n");
      out.write("	color: black;\r\n");
      out.write("	left : 30px;\r\n");
      out.write("	padding: 3px;\r\n");
      out.write("	border: 1px solid #aabb99;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("input[type=submit]:hover, input[type=button]:hover, input[type=reset]:hover {\r\n");
      out.write("	background-color: #aabb99;\r\n");
      out.write("	color: white;	\r\n");
      out.write("	box-shadow: 0 3px 3px 0 rgba(0,0,0,0.24), 0 3px 3px 0 rgba(0,0,0,0.19);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".id_ok{color:#fff; display: none;}\r\n");
      out.write("\r\n");
      out.write(".id_already{color:#6A82FB; display: none;}\r\n");
      out.write("\r\n");
      out.write(".nick_ok{color:#fff; display: none;}\r\n");
      out.write("\r\n");
      out.write(".nick_already{color:#6A82FB; display: none;}</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div >\r\n");
      out.write("	<form action=\"../project/join.do\" name=\"frmReg\" method=\"post\"\r\n");
      out.write("		onsubmit=\"return validCheck()\" onclick=\"execPostCode()\">\r\n");
      out.write("		<input type=\"hidden\" name=\"save\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr><th>회원가입<th><tr>	\r\n");
      out.write("		 	<tr>\r\n");
      out.write("				<th>아이디</th>\r\n");
      out.write("		 		<td><input type=\"text\" id = \"id\" name=\"user_id\" required oninput = \"checkId()\" /> \r\n");
      out.write("				<span class=\"id_ok\">사용 가능한 아이디입니다.</span>\r\n");
      out.write("				<span class=\"id_already\">누군가 이 아이디를 사용하고 있어요.</span></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("		 	<tr><th>비밀번호</th>\r\n");
      out.write("		 		<td><input type=\"password\" name=\"user_pw\">(8자리 이상 입력해주세요)</td>\r\n");
      out.write("		 	</tr>\r\n");
      out.write("			<tr><th>이름</th>\r\n");
      out.write("	 			<td> <input type=\"text\"  name=\"user_name\" ></td>\r\n");
      out.write("		 	</tr>\r\n");
      out.write("		 	<tr>\r\n");
      out.write("		 		<th>닉네임</th> \r\n");
      out.write("		 		<td><input type=\"text\" id = \"nick\" name=\"user_nickname\" required oninput = \"checkNick()\" /> \r\n");
      out.write("				<span class=\"nick_ok\">사용 가능한 닉네임입니다.</span>\r\n");
      out.write("				<span class=\"nick_already\">누군가 이 닉네임을 사용하고 있어요.</span></td>\r\n");
      out.write("		 	</tr>\r\n");
      out.write("			<tr><th>이메일</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"user_email\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr><th>전화번호</th>\r\n");
      out.write("				<td><input type=\"tel\" name=\"user_phone\">(ㅡ 없이 입력해주세요)</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("				<tr><th>주소</th>\r\n");
      out.write("				<td> <input class=\"form-control\" style=\"top: 5px;\" name=\"user_address\" id=\"m_addr\" type=\"text\" readonly>\r\n");
      out.write("				  <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"주소찾기\" onclick=\"sample6_execDaumPostcode()\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" style=\"text-align: center\">\r\n");
      out.write("				<input type=\"submit\" value=\"가입하기\"> \r\n");
      out.write("				<input type=\"reset\" value=\"다시쓰기\"></td>   \r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>		\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script src=\"/resources/js/addressapi.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("    function checkId(){\r\n");
      out.write("        var id = $('#id').val(); \r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:'IdCheck/' + id, \r\n");
      out.write("            type:'get', \r\n");
      out.write("            dataType : 'json',\r\n");
      out.write("            success:function(xhr){\r\n");
      out.write("            	if(xhr.data){ \r\n");
      out.write("                    $('.id_ok').css(\"display\",\"inline-block\"); \r\n");
      out.write("                    $('.id_ok').css(\"color\",\"#6A82FB\"); \r\n");
      out.write("                    $('.id_already').css(\"display\", \"none\");\r\n");
      out.write("                } else { \r\n");
      out.write("                    $('.id_already').css(\"display\",\"inline-block\");\r\n");
      out.write("                    $('.id_already').css(\"color\",\"#ff0000\"); \r\n");
      out.write("                    $('.id_ok').css(\"display\", \"none\");\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("        });\r\n");
      out.write("    };\r\n");
      out.write("    function checkNick(){\r\n");
      out.write("        var nick = $('#nick').val(); \r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:'NickCheck/' + nick, \r\n");
      out.write("            type:'get', \r\n");
      out.write("            dataType : 'json',\r\n");
      out.write("            success:function(xhr){\r\n");
      out.write("            	if(xhr.data){ \r\n");
      out.write("                    $('.nick_ok').css(\"display\",\"inline-block\"); \r\n");
      out.write("                    $('.nick_ok').css(\"color\",\"#6A82FB\"); \r\n");
      out.write("                    $('.nick_already').css(\"display\", \"none\");\r\n");
      out.write("                } else { \r\n");
      out.write("                    $('.nick_already').css(\"display\",\"inline-block\");\r\n");
      out.write("                    $('.nick_already').css(\"color\",\"#ff0000\"); \r\n");
      out.write("                    $('.nick_ok').css(\"display\", \"none\");\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("        });\r\n");
      out.write("    };\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function validCheck() {\r\n");
      out.write("	const frm = document.frmReg;\r\n");
      out.write("if (frm.name.value == \"\") {\r\n");
      out.write("    alert(\"이름을 입력하지 않았습니다.\")\r\n");
      out.write("    frm.name.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if(frm.name.value.length<2){\r\n");
      out.write("    alert(\"이름을 2자 이상 입력해주십시오.\")\r\n");
      out.write("    frm.name.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.id.value == \"\") {\r\n");
      out.write("    alert(\"아이디를 입력하지 않았습니다.\")\r\n");
      out.write("    frm.id.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.password.value == \"\") {\r\n");
      out.write("     alert(\"비밀번호를 입력하지 않았습니다.\")\r\n");
      out.write("     frm.password.focus();\r\n");
      out.write("     return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.password.value.length < 8){\r\n");
      out.write("	alert('패스워드는 8글자 이상으로 하세요.');\r\n");
      out.write("	frm.password.focus();				\r\n");
      out.write("	return false;						\r\n");
      out.write("}\r\n");
      out.write("if (frm.nick.value == \"\") {\r\n");
      out.write("    alert(\"닉네임을 입력하지 않았습니다.\")\r\n");
      out.write("    frm.nick.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.tel.value == \"\") {\r\n");
      out.write("    alert(\"전화번호를 입력하지 않았습니다.\")\r\n");
      out.write("    frm.tel.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.m_addr.value == \"\") {\r\n");
      out.write("    alert(\"주소를 입력하지 않았습니다.\")\r\n");
      out.write("    frm.m_addr.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("if (frm.s_addr.value == \"\") {\r\n");
      out.write("    alert(\"주소를 입력하지 않았습니다.\")\r\n");
      out.write("    frm.s_addr.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function sample6_execDaumPostcode() {\r\n");
      out.write("	  new daum.Postcode({\r\n");
      out.write("	    oncomplete: function(data) {\r\n");
      out.write("	      var fullAddr = ''; \r\n");
      out.write("	      var extraAddr = '';\r\n");
      out.write("	      if (data.userSelectedType === 'R') { \r\n");
      out.write("	        fullAddr = data.roadAddress;\r\n");
      out.write("	      } else { \r\n");
      out.write("	        fullAddr = data.jibunAddress;\r\n");
      out.write("	      }\r\n");
      out.write("	      if (data.userSelectedType === 'R') {\r\n");
      out.write("	        if (data.bname !== '') {\r\n");
      out.write("	          extraAddr += data.bname;\r\n");
      out.write("	        }\r\n");
      out.write("	        if (data.buildingName !== '') {\r\n");
      out.write("	          extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("	        }\r\n");
      out.write("	        fullAddr += (extraAddr !== '' ? ' (' + extraAddr + ')' : '');\r\n");
      out.write("	      }\r\n");
      out.write("	      document.getElementById('m_addr').value = fullAddr;\r\n");
      out.write("	      function handleClick() {\r\n");
      out.write("	    	  sample6_execDaumPostcode();\r\n");
      out.write("	    	  window.close(); // 팝업창에서 호출하는 경우에만 동작합니다.\r\n");
      out.write("	    }\r\n");
      out.write("	    }\r\n");
      out.write("	}).open();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	document.getElementById('button').addEventListener('click', handleClick);\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("document.getElementById(\"home_select\").addEventListener(\"change\",function(){\r\n");
      out.write("	if(this.value==\"기타\"){ \r\n");
      out.write("		document.frmReg.home_etc.disabled=false;\r\n");
      out.write("	}else {\r\n");
      out.write("		document.frmReg.home_etc.disabled=true;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
