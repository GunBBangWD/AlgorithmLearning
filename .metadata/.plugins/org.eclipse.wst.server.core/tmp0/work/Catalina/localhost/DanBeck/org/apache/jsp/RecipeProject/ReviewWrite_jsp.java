/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-22 05:44:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.RecipeProject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import org.apache.commons.fileupload.*;
import org.apache.commons.fileupload.disk.*;
import org.apache.commons.fileupload.servlet.*;

public final class ReviewWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1681121315264L));
    _jspx_dependants.put("jar:file:/C:/Users/hgh04/Documents/JSPteam2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DanBeck/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/hgh04/Documents/JSPteam2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DanBeck/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("org.apache.commons.fileupload");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("org.apache.commons.fileupload.disk");
    _jspx_imports_packages.add("org.apache.commons.fileupload.servlet");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>리뷰 작성</title>\r\n");
      out.write("<style>\r\n");
      out.write(".fileList {\r\n");
      out.write("   list-style: none;\r\n");
      out.write("}\r\n");
      out.write(" .star-rating{\r\n");
      out.write("   font-size: 0;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".star-rating__wrap{\r\n");
      out.write("   display: inline-block;\r\n");
      out.write("   font-size: 1rem;\r\n");
      out.write("   padding-top:30px;\r\n");
      out.write("   line-height: 1.7rem;\r\n");
      out.write("}\r\n");
      out.write(".star-rating__wrap:after{\r\n");
      out.write("   content: \"\";\r\n");
      out.write("   display: table;\r\n");
      out.write("   clear: both;\r\n");
      out.write("}\r\n");
      out.write(".star-rating__ico{\r\n");
      out.write("   float: right;\r\n");
      out.write("   padding-left: 2px;\r\n");
      out.write("   cursor: pointer;\r\n");
      out.write("   color:#ffcc00;\r\n");
      out.write("}\r\n");
      out.write(".star-rating__ico:last-child{\r\n");
      out.write("   padding-left: 0;\r\n");
      out.write("}\r\n");
      out.write(".star-rating__input{\r\n");
      out.write("   display: none;\r\n");
      out.write("}\r\n");
      out.write(".star-rating__ico:hover:before,\r\n");
      out.write(".star-rating__ico:hover ~ .star-rating__ico:before,\r\n");
      out.write(".star-rating__input:checked ~ .star-rating__ico:before\r\n");
      out.write("{\r\n");
      out.write("   content: \"\\f005\";\r\n");
      out.write("} \r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("   href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("   $(function() {\r\n");
      out.write("      $('#upFile').on('click', function() {\r\n");
      out.write("         $('#reviewPhoto').click();\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('#reviewPhoto')\r\n");
      out.write("            .change(\r\n");
      out.write("                  function() {\r\n");
      out.write("                     var fileList = this.files;\r\n");
      out.write("                     var fileCount = fileList.length;\r\n");
      out.write("                     for (var i = 0; i < fileCount; i++) {\r\n");
      out.write("                        var file = fileList[i];\r\n");
      out.write("                        var fileName = file.name;\r\n");
      out.write("                        var fileSize = file.size;\r\n");
      out.write("\r\n");
      out.write("                        // Check if file already exists in list\r\n");
      out.write("                        if ($('.fileList li:contains(\"' + fileName\r\n");
      out.write("                              + '\")').length) {\r\n");
      out.write("                           alert('\"' + fileName\r\n");
      out.write("                                 + '\" already exists in the list.');\r\n");
      out.write("                        } else {\r\n");
      out.write("                           // Check file size\r\n");
      out.write("                           var maxSize = 10 * 1024 * 1024; // 10 MB\r\n");
      out.write("                           if (fileSize > maxSize) {\r\n");
      out.write("                              alert('\"'\r\n");
      out.write("                                    + fileName\r\n");
      out.write("                                    + '\" is too large. Maximum file size is 10 MB.');\r\n");
      out.write("                           } else {\r\n");
      out.write("                              var listItem = $('<li class=\"fileItem\"></li>');\r\n");
      out.write("                              var nameDiv = $('<div name=\"review_img[]\" class=\"fileName\">'\r\n");
      out.write("                                    + fileName + '</div>');\r\n");
      out.write("                              var deleteButton = $('<div class=\"del_btn\">x</div>');\r\n");
      out.write("                              listItem.append(nameDiv);\r\n");
      out.write("                              listItem.append(deleteButton);\r\n");
      out.write("                              $('.fileList').append(listItem);\r\n");
      out.write("                           }\r\n");
      out.write("                        }\r\n");
      out.write("                     }\r\n");
      out.write("                  });\r\n");
      out.write("\r\n");
      out.write("      $('.fileList').on('click', '.del_btn', function() {\r\n");
      out.write("         $(this).parent().remove();\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"review\" style=\"width: 95%; display: flex;\">\r\n");
      out.write("      <form action=\"../project/writeReview.do\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("          <input name=\"user_idx\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user.user_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("          <input name=\"recipe_id\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${recipe_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("          <h3>Write review</h3>\r\n");
      out.write("            <span>맛 평점</span>\r\n");
      out.write("<!--             <span class=\"star-cb-group\"> -->\r\n");
      out.write("                  <div class=\"star-rating\">\r\n");
      out.write("      <div class=\"star-rating__wrap\">\r\n");
      out.write("        <input class=\"star-rating__input\" id=\"star-rating-5\" type=\"radio\" name=\"rate\" value=\"5\" checked=\"checked\">\r\n");
      out.write("        <label class=\"star-rating__ico fa fa-star-o fa-lg\" for=\"star-rating-5\" ></label>\r\n");
      out.write("        <input class=\"star-rating__input\" id=\"star-rating-4\" type=\"radio\" name=\"rate\" value=\"4\">\r\n");
      out.write("        <label class=\"star-rating__ico fa fa-star-o fa-lg\" for=\"star-rating-4\" ></label>\r\n");
      out.write("        <input class=\"star-rating__input\" id=\"star-rating-3\" type=\"radio\" name=\"rate\" value=\"3\">\r\n");
      out.write("        <label class=\"star-rating__ico fa fa-star-o fa-lg\" for=\"star-rating-3\" ></label>\r\n");
      out.write("        <input class=\"star-rating__input\" id=\"star-rating-2\" type=\"radio\" name=\"rate\" value=\"2\">\r\n");
      out.write("        <label class=\"star-rating__ico fa fa-star-o fa-lg\" for=\"star-rating-2\" ></label>\r\n");
      out.write("        <input class=\"star-rating__input\" id=\"star-rating-1\" type=\"radio\" name=\"rate\" value=\"1\">\r\n");
      out.write("        <label class=\"star-rating__ico fa fa-star-o fa-lg\" for=\"star-rating-1\" ></label>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("<!--               </span> -->\r\n");
      out.write("         <hr>\r\n");
      out.write("         <textarea name=\"review_content\" style=\"width: 35%; height: 150px\"\r\n");
      out.write("            placeholder=\"리뷰를 입력하세요\"></textarea>\r\n");
      out.write("         <br>\r\n");
      out.write("         <br>\r\n");
      out.write("         <p>이미지 업로드</p>\r\n");
      out.write("         <button type=\"button\" id=\"upFile\">파일첨부</button>\r\n");
      out.write("         <input type=\"file\" name=\"fileUpload\" class=\"reviewPhoto\"\r\n");
      out.write("            id=\"reviewPhoto\" style=\"display: none;\" multiple>\r\n");
      out.write("         <ul class=\"fileList\">\r\n");
      out.write("         </ul>\r\n");
      out.write("         <br>\r\n");
      out.write("         <br>\r\n");
      out.write("         <button type=\"submit\">완료</button>\r\n");
      out.write("         <a href=\"../RecipeProject/Home.jsp\">\r\n");
      out.write("         <button type=\"button\">HOME</button>\r\n");
      out.write("         </a>\r\n");
      out.write("      </form>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
