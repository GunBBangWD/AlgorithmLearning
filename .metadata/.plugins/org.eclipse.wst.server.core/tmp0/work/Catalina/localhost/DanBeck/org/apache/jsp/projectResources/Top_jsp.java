/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-21 08:26:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.projectResources;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1681121315264L));
    _jspx_dependants.put("jar:file:/C:/Users/hgh04/Documents/JSPteam2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DanBeck/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/hgh04/Documents/JSPteam2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DanBeck/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.4.js\"\r\n");
      out.write("	integrity=\"sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("@import\r\n");
      out.write("	url('https://fonts.googleapis.com/css2?family=Gugi&display=swap');\r\n");
      out.write("\r\n");
      out.write("@import\r\n");
      out.write("	url('https://fonts.googleapis.com/css2?family=Nanum+Myeongjo:wght@700&display=swap')\r\n");
      out.write("	;\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/top.css?v=3\">\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<div id=\"headerbar\" onscroll=\"headerbarToggle()\"></div>\r\n");
      out.write("	\r\n");
      out.write("	<a class=\"home\" href='../RecipeProject/Home.jsp'>집에 보내조</a> <a class=\"m-icon\"><ion-icon 	name=\"person-outline\"></ion-icon></a>\r\n");
      out.write("<!-- 	<form action=\"#\" method=\"get\" class=\"searchBar\">\r\n");
      out.write("		<input type=\"text\" id=\"searchRecipe\"> \r\n");
      out.write("		<div id=\"suggestion_keyword\">		\r\n");
      out.write("		</div>	\r\n");
      out.write("		<input type=\"submit\" value=\"돋보기\">\r\n");
      out.write("	</form> -->\r\n");
      out.write("	<br><br><br>\r\n");
      out.write("	<div>\r\n");
      out.write("		<section class=\"log\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("\r\n");
      out.write("		<nav class=\"navMenu\">\r\n");
      out.write("			<div class=\"nav-links\">\r\n");
      out.write("				<a href=\"join\">추천</a> <a href=\"rblist\">분류</a>\r\n");
      out.write("				<a href=\"q_list\">랭킹</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</nav>\r\n");
      out.write("		<div class=\"burger\">\r\n");
      out.write("			<div class=\"line1\"></div>\r\n");
      out.write("			<div class=\"line2\"></div>\r\n");
      out.write("			<div class=\"line3\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("	var delayTimer;\r\n");
      out.write("	$('#searchRecipe').on('keyup', function() {\r\n");
      out.write("	  clearTimeout(delayTimer);\r\n");
      out.write("	  delayTimer = setTimeout(function() {\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	      url: \"/jspstudy/autoSearch.do\",\r\n");
      out.write("	      data: {\r\n");
      out.write("	        name: $(\"#searchRecipe\").val()\r\n");
      out.write("	      },\r\n");
      out.write("	      type: \"GET\"\r\n");
      out.write("	    })\r\n");
      out.write("	    .done(function(data, textStatus) {\r\n");
      out.write("	      let temp = \"<ul>\";\r\n");
      out.write("	      $.each(data.suggestions, function(key, value) {\r\n");
      out.write("	        temp += \"<li>\" + value + \"</li>\";\r\n");
      out.write("	      });\r\n");
      out.write("	      temp += \"</ul>\";\r\n");
      out.write("	      $('#suggestion_keyword').html(temp);\r\n");
      out.write("	    })\r\n");
      out.write("	    .fail(function(data, textStatus) {\r\n");
      out.write("	      console.log('error', data, textStatus);\r\n");
      out.write("	    })\r\n");
      out.write("	  }, 500); // 500ms 이후에 요청을 보냄\r\n");
      out.write("	});\r\n");
      out.write("})\r\n");
      out.write("	//HeaderToggle\r\n");
      out.write("	var prevScrollPos = window.pageYOffset;\r\n");
      out.write("	console.log(\"first Y offset: \" + prevScrollPos) //first value : 0\r\n");
      out.write("	window.onscroll = headerbarToggle\r\n");
      out.write("	function headerbarToggle() {\r\n");
      out.write("		var header = document.getElementById(\"headerbar\");\r\n");
      out.write("\r\n");
      out.write("		var currentScrollPos = window.pageYOffset; // current Y offset\r\n");
      out.write("		if (prevScrollPos < currentScrollPos) {\r\n");
      out.write("			header.style.opacity = '0.8';\r\n");
      out.write("		} else {\r\n");
      out.write("			header.style.opacity = '0';\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	const logSlide = () =>{\r\n");
      out.write("		const mIcon = document.querySelector('.m-icon');\r\n");
      out.write("		const log = document.querySelector('.log');\r\n");
      out.write("		const logAll = document.querySelectorAll('.log a');\r\n");
      out.write("\r\n");
      out.write("		mIcon.addEventListener('click', () => {\r\n");
      out.write("			log.classList.toggle('log-active');\r\n");
      out.write("			\r\n");
      out.write("			logAll.forEach((link, index) =>{\r\n");
      out.write("				if(link.style.animation){\r\n");
      out.write("					link.style.animation = '';\r\n");
      out.write("				}else{\r\n");
      out.write("					link.style.animation = `logLinkFade 0.5s ease forwards ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index /7 + 0.3}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("s`;\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	logSlide();\r\n");
      out.write("	\r\n");
      out.write("	const navSlide = () => {\r\n");
      out.write("		const burger = document.querySelector('.burger');\r\n");
      out.write("		const nav = document.querySelector('.nav-links');\r\n");
      out.write("		const navLinks = document.querySelectorAll('.nav-links a');\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		burger.addEventListener('click', () => {\r\n");
      out.write("	        //Toggle Nav\r\n");
      out.write("			nav.classList.toggle('nav-active');\r\n");
      out.write("	        \r\n");
      out.write("	        //Animate Links\r\n");
      out.write("	        navLinks.forEach((link, index) => {\r\n");
      out.write("	            \r\n");
      out.write("	            if(link.style.animation){\r\n");
      out.write("	                \r\n");
      out.write("	                link.style.animation = '';\r\n");
      out.write("	                \r\n");
      out.write("	            } else {\r\n");
      out.write("	                \r\n");
      out.write("	                link.style.animation = `navLinkFade 0.5s ease forwards ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index / 7 + 0.3}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("s`;\r\n");
      out.write("	                \r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	        //Burger Animation\r\n");
      out.write("	        burger.classList.toggle('toggle');\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	navSlide();\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"module\"\r\n");
      out.write("	src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\"></script>\r\n");
      out.write("<script nomodule\r\n");
      out.write("	src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /projectResources/Top.jsp(32,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user ==null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<a class=\"login-out-reg\" href=\"../project/loginCheck.do\">로그인</a>\r\n");
          out.write("				<a class=\"login-out-reg\" href=\"../project/join.do\">회원가입</a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /projectResources/Top.jsp(36,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user !=null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<a class=\"login-out-reg\" href=\"../project/logout.do\">로그아웃</a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
