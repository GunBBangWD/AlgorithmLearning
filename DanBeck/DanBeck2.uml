<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_ccqMkOT6Ee22rp5Kgxfxyw" name="DanBeck2">
    <eAnnotations xmi:id="_cdvKoOT6Ee22rp5Kgxfxyw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_cdvKoeT6Ee22rp5Kgxfxyw" source="codegen">
        <details xmi:id="_cdvxsOT6Ee22rp5Kgxfxyw" key="codegenDirectory" value="/DanBeck/src/main/java"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_cz62AOT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_cz62AeT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_cz7dEOT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_cz7dEeT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_cz7dEuT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_cz7dE-T6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_cz7dFOT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_cz7dFeT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_cz8EIOT6Ee22rp5Kgxfxyw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_c0HqUOT6Ee22rp5Kgxfxyw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_c0HqUeT6Ee22rp5Kgxfxyw" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBHkgOT6Ee22rp5Kgxfxyw" name="Connection"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBJZsOT6Ee22rp5Kgxfxyw" name="PreparedStatement"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBKn0eT6Ee22rp5Kgxfxyw" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBL18eT6Ee22rp5Kgxfxyw" name="SQLException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBNEEOT6Ee22rp5Kgxfxyw" name="Statement"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_dB19QOT6Ee22rp5Kgxfxyw" name="Date"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_dB3ycOT6Ee22rp5Kgxfxyw" name="Timestamp"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0RbUOT6Ee22rp5Kgxfxyw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_dBQucOT6Ee22rp5Kgxfxyw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBgmEOT6Ee22rp5Kgxfxyw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBhNIeT6Ee22rp5Kgxfxyw" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBh0MeT6Ee22rp5Kgxfxyw" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB6OsOT6Ee22rp5Kgxfxyw" name="PrintWriter"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0RbUeT6Ee22rp5Kgxfxyw" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBR8keT6Ee22rp5Kgxfxyw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBmFoeT6Ee22rp5Kgxfxyw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBmsseT6Ee22rp5Kgxfxyw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBnTweT6Ee22rp5Kgxfxyw" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB8D4OT6Ee22rp5Kgxfxyw" name="Properties"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0vVYOT6Ee22rp5Kgxfxyw" name="time">
        <packagedElement xmi:type="uml:Class" xmi:id="_dBlekOT6Ee22rp5Kgxfxyw" name="LocalDate"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_c0IRYOT6Ee22rp5Kgxfxyw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_c0IRYeT6Ee22rp5Kgxfxyw" name="naming">
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBNrIeT6Ee22rp5Kgxfxyw" name="Context"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBOSMeT6Ee22rp5Kgxfxyw" name="InitialContext"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0I4cOT6Ee22rp5Kgxfxyw" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBO5QeT6Ee22rp5Kgxfxyw" name="DataSource"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0SCYOT6Ee22rp5Kgxfxyw" name="servlet">
        <packagedElement xmi:type="uml:Package" xmi:id="_c0SCYeT6Ee22rp5Kgxfxyw" name="annotation">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dBUY0eT6Ee22rp5Kgxfxyw" name="WebServlet"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dBjCUeT6Ee22rp5Kgxfxyw" name="MultipartConfig"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_c0SCYuT6Ee22rp5Kgxfxyw" name="http">
          <packagedElement xmi:type="uml:Class" xmi:id="_dBVm8eT6Ee22rp5Kgxfxyw" name="HttpServlet"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dBW1EeT6Ee22rp5Kgxfxyw" name="HttpServletRequest"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dBYDMOT6Ee22rp5Kgxfxyw" name="HttpServletResponse"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dBc7sOT6Ee22rp5Kgxfxyw" name="HttpSession"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_c13WwOT6Ee22rp5Kgxfxyw" name="jsp">
          <packagedElement xmi:type="uml:Class" xmi:id="_dB61wOT6Ee22rp5Kgxfxyw" name="JspWriter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dBTxwOT6Ee22rp5Kgxfxyw" name="ServletException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dBibQeT6Ee22rp5Kgxfxyw" name="ServletResponse"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dCCxkOT6Ee22rp5Kgxfxyw" name="RequestDispatcher"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c16aEOT6Ee22rp5Kgxfxyw" name="mail">
        <packagedElement xmi:type="uml:Package" xmi:id="_c17BIOT6Ee22rp5Kgxfxyw" name="internet">
          <packagedElement xmi:type="uml:Class" xmi:id="_dB_uQuT6Ee22rp5Kgxfxyw" name="InternetAddress"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dCAVUeT6Ee22rp5Kgxfxyw" name="MimeMessage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB8q8eT6Ee22rp5Kgxfxyw" name="Authenticator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB9SAeT6Ee22rp5Kgxfxyw" name="Message"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB95EeT6Ee22rp5Kgxfxyw" name="MessagingException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB-gIeT6Ee22rp5Kgxfxyw" name="PasswordAuthentication"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB-gI-T6Ee22rp5Kgxfxyw" name="Session"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dB_uQOT6Ee22rp5Kgxfxyw" name="Transport"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_c0Nw8OT6Ee22rp5Kgxfxyw" name="DBpackage">
      <packagedElement xmi:type="uml:Class" xmi:id="_c21nIOT6Ee22rp5Kgxfxyw" name="DBConnectpool">
        <ownedAttribute xmi:id="_dC34AOT6Ee22rp5Kgxfxyw" name="con" type="_dBHkgOT6Ee22rp5Kgxfxyw" association="_dD0TMOT6Ee22rp5Kgxfxyw"/>
        <ownedAttribute xmi:id="_dC4fEOT6Ee22rp5Kgxfxyw" name="stmt" type="_dBNEEOT6Ee22rp5Kgxfxyw" association="_dD06QOT6Ee22rp5Kgxfxyw"/>
        <ownedAttribute xmi:id="_dC4fEuT6Ee22rp5Kgxfxyw" name="psmt" type="_dBJZsOT6Ee22rp5Kgxfxyw" association="_dD06Q-T6Ee22rp5Kgxfxyw"/>
        <ownedAttribute xmi:id="_dC5GIOT6Ee22rp5Kgxfxyw" name="rs" type="_dBKn0eT6Ee22rp5Kgxfxyw" association="_dD1hUeT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDSuwOT6Ee22rp5Kgxfxyw" name="DBConnectpool" specification="_c25RgOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDSuweT6Ee22rp5Kgxfxyw" type="_c21nIOT6Ee22rp5Kgxfxyw" direction="return"/>
          <language>java</language>
          <body>try {&#xD;
			Context initCtx = new InitialContext();&#xD;
			Context ctx = (Context)initCtx.lookup(&quot;java:comp/env&quot;);&#xD;
			DataSource source = (DataSource)ctx.lookup(&quot;dbcp_mysql&quot;);&#xD;
			con=source.getConnection();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;DB CP connect fail&quot;);&#xD;
		} &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDWZIOT6Ee22rp5Kgxfxyw" name="close" specification="_c26foOT6Ee22rp5Kgxfxyw">
          <language>java</language>
          <body>try {&#xD;
			if(rs!=null) rs.close();&#xD;
			if(stmt!=null) stmt.close();&#xD;
			if(psmt!=null) psmt.close();&#xD;
			if (con != null) con.close();&#xD;
			System.out.println(&quot;DB CP connection 반납&quot;);&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_c25RgOT6Ee22rp5Kgxfxyw" name="DBConnectpool" method="_dDSuwOT6Ee22rp5Kgxfxyw">
          <eAnnotations xmi:id="_c254kOT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_c254keT6Ee22rp5Kgxfxyw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_c254kuT6Ee22rp5Kgxfxyw" type="_c21nIOT6Ee22rp5Kgxfxyw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_c26foOT6Ee22rp5Kgxfxyw" name="close" method="_dDWZIOT6Ee22rp5Kgxfxyw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dD0TMOT6Ee22rp5Kgxfxyw" name="" memberEnd="_dD0TMeT6Ee22rp5Kgxfxyw _dC34AOT6Ee22rp5Kgxfxyw">
        <ownedEnd xmi:id="_dD0TMeT6Ee22rp5Kgxfxyw" name="" type="_c21nIOT6Ee22rp5Kgxfxyw" association="_dD0TMOT6Ee22rp5Kgxfxyw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dD06QOT6Ee22rp5Kgxfxyw" name="" memberEnd="_dD06QeT6Ee22rp5Kgxfxyw _dC4fEOT6Ee22rp5Kgxfxyw">
        <ownedEnd xmi:id="_dD06QeT6Ee22rp5Kgxfxyw" name="" type="_c21nIOT6Ee22rp5Kgxfxyw" association="_dD06QOT6Ee22rp5Kgxfxyw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dD06Q-T6Ee22rp5Kgxfxyw" name="" memberEnd="_dD06ROT6Ee22rp5Kgxfxyw _dC4fEuT6Ee22rp5Kgxfxyw">
        <ownedEnd xmi:id="_dD06ROT6Ee22rp5Kgxfxyw" name="" type="_c21nIOT6Ee22rp5Kgxfxyw" association="_dD06Q-T6Ee22rp5Kgxfxyw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dD1hUeT6Ee22rp5Kgxfxyw" name="" memberEnd="_dD2IYOT6Ee22rp5Kgxfxyw _dC5GIOT6Ee22rp5Kgxfxyw">
        <ownedEnd xmi:id="_dD2IYOT6Ee22rp5Kgxfxyw" name="" type="_c21nIOT6Ee22rp5Kgxfxyw" association="_dD1hUeT6Ee22rp5Kgxfxyw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_c0Q0QOT6Ee22rp5Kgxfxyw" name="recipe">
      <packagedElement xmi:type="uml:Package" xmi:id="_c0TQgOT6Ee22rp5Kgxfxyw" name="dao">
        <packagedElement xmi:type="uml:Class" xmi:id="_c37MQOT6Ee22rp5Kgxfxyw" name="IngredientDao">
          <generalization xmi:id="_dBuBcOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDZcduT6Ee22rp5Kgxfxyw" name="IngredientDao" specification="_c37zUOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDZcd-T6Ee22rp5Kgxfxyw" type="_c37MQOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaDgOT6Ee22rp5Kgxfxyw" name="insertIngredient" specification="_c38aYOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaDgeT6Ee22rp5Kgxfxyw" name="ingredient_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDaDguT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int result=0;&#xD;
		String sql=&quot;insert into ingredient(ingredient_name) values(?)&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1,ingredient_name);&#xD;
			result=psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;댓글 INSERT 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c37zUOT6Ee22rp5Kgxfxyw" name="IngredientDao" method="_dDZcduT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c37zUeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c37zUuT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c37zU-T6Ee22rp5Kgxfxyw" type="_c37MQOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c38aYOT6Ee22rp5Kgxfxyw" name="insertIngredient" method="_dDaDgOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c38aYuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c38aYeT6Ee22rp5Kgxfxyw" name="ingredient_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c39BcOT6Ee22rp5Kgxfxyw" name="RecipeCategoryKindDao">
          <generalization xmi:id="_dBuBceT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaDg-T6Ee22rp5Kgxfxyw" name="RecipeCategoryKindDao" specification="_c39ogOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaDhOT6Ee22rp5Kgxfxyw" type="_c39BcOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaDheT6Ee22rp5Kgxfxyw" name="cateList" specification="_c3-PkOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaDhuT6Ee22rp5Kgxfxyw" name="category_idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDaDh-T6Ee22rp5Kgxfxyw" type="_c4d-0OT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDaDiOT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;RecipeCategoryKindDto> cate1List = new ArrayList&lt;>();&#xD;
		String sql = &quot;select * from recipe_category_kind where category_kind_type = ?&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1, category_idx);&#xD;
			rs = psmt.executeQuery();&#xD;
			while(rs.next()) {&#xD;
				RecipeCategoryKindDto dto = new RecipeCategoryKindDto();&#xD;
				dto.setCategory_kind_idx(rs.getString(&quot;category_kind_idx&quot;));&#xD;
				dto.setCategory_kind_name(rs.getString(&quot;category_kind_name&quot;));&#xD;
				dto.setCategory_idx(rs.getString(&quot;category_kind_type&quot;));&#xD;
				cate1List.add(dto);&#xD;
			}&#xD;
		}catch(Exception e) {&#xD;
			System.out.println(&quot;카테고리1 리스트 조회 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return cate1List;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c39ogOT6Ee22rp5Kgxfxyw" name="RecipeCategoryKindDao" method="_dDaDg-T6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c39ogeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c39oguT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c39og-T6Ee22rp5Kgxfxyw" type="_c39BcOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c3-PkOT6Ee22rp5Kgxfxyw" name="cateList" method="_dDaDheT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c3-PkuT6Ee22rp5Kgxfxyw" type="_c4d-0OT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c3-Pk-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c3-PkeT6Ee22rp5Kgxfxyw" name="category_idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3_dsOT6Ee22rp5Kgxfxyw" name="RecipeCommentDao">
          <generalization xmi:id="_dBvPkOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaqkOT6Ee22rp5Kgxfxyw" name="RecipeCommentDao" specification="_c4AEwOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaqkeT6Ee22rp5Kgxfxyw" type="_c3_dsOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaqkuT6Ee22rp5Kgxfxyw" name="getCommentCount" specification="_c4Ar0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaqk-T6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDaqlOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int count=0;&#xD;
		String sql= &quot;select count(*) from recipe_comment where recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			rs = psmt.executeQuery();&#xD;
			rs.next();&#xD;
			count = rs.getInt(1);&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;게시물 댓글 Count 조회 중 DB 오류&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return count;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaqleT6Ee22rp5Kgxfxyw" name="detailView" specification="_c4Ar0-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaqluT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDaql-T6Ee22rp5Kgxfxyw" type="_c4fM8OT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDaqmOT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;RecipeCommentDto> list = new ArrayList&lt;>();&#xD;
		String sql=&quot;select rc.*,u.user_nickname  from recipe_comment rc,users u  where u.user_idx =rc.user_idx and recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			rs=psmt.executeQuery();&#xD;
			while(rs.next()) {&#xD;
				RecipeCommentDto dto = new RecipeCommentDto();&#xD;
				dto.setComment_id(rs.getString(&quot;comment_id&quot;));&#xD;
				dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
				dto.setUser_idx(rs.getString(&quot;user_idx&quot;));&#xD;
				dto.setComment_content(rs.getString(&quot;comment_content&quot;));&#xD;
				dto.setComment_date(rs.getDate(&quot;comment_date&quot;));&#xD;
				dto.setUser_nickname(rs.getString(&quot;user_nickname&quot;));&#xD;
				list.add(dto);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;게시물 상세보기 댓글 리스트 조회중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return list;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDaqmeT6Ee22rp5Kgxfxyw" name="writeComment" specification="_dBuogOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDaqmuT6Ee22rp5Kgxfxyw" name="dto" type="_c4fM8OT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDaqm-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int result=0;&#xD;
		String sql=&quot;insert into recipe_comment(recipe_id,user_idx,comment_content) values(?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1,dto.getRecipe_id());&#xD;
			psmt.setString(2,dto.getUser_idx());&#xD;
			psmt.setString(3,dto.getComment_content());&#xD;
			result=psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;댓글 INSERT 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDbRoOT6Ee22rp5Kgxfxyw" name="deleteComment" specification="_c4B58OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDbRoeT6Ee22rp5Kgxfxyw" name="comment_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDbRouT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int result=0;&#xD;
		String sql = &quot;DELETE FROM recipe_comment WHERE comment_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, comment_id);&#xD;
			result = psmt.executeUpdate();&#xD;
			System.out.println(&quot;댓글 삭제 완료&quot;);&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;댓글 삭제 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4AEwOT6Ee22rp5Kgxfxyw" name="RecipeCommentDao" method="_dDaqkOT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4AEweT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4AEwuT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4AEw-T6Ee22rp5Kgxfxyw" type="_c3_dsOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4Ar0OT6Ee22rp5Kgxfxyw" name="getCommentCount" method="_dDaqkuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4Ar0uT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4Ar0eT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4Ar0-T6Ee22rp5Kgxfxyw" name="detailView" method="_dDaqleT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4BS4OT6Ee22rp5Kgxfxyw" type="_c4fM8OT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4BS4eT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4Ar1OT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4B58OT6Ee22rp5Kgxfxyw" name="deleteComment" method="_dDbRoOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4B58uT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4B58eT6Ee22rp5Kgxfxyw" name="comment_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBuogOT6Ee22rp5Kgxfxyw" name="writeComment" method="_dDaqmeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBuoguT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBuogeT6Ee22rp5Kgxfxyw" name="dto" type="_c4fM8OT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4ChAOT6Ee22rp5Kgxfxyw" name="RecipeDao">
          <generalization xmi:id="_dBwdtOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDbRo-T6Ee22rp5Kgxfxyw" name="RecipeDao" specification="_c4DIEOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDbRpOT6Ee22rp5Kgxfxyw" type="_c4ChAOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDbRpeT6Ee22rp5Kgxfxyw" name="getCount" specification="_dCmyQOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDbRpuT6Ee22rp5Kgxfxyw" name="map" type="_dBnTweT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDbRp-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int count = 0;&#xD;
	    String sql = &quot;&quot;;&#xD;
	    if (map.get(&quot;cat1&quot;) != null &amp;&amp; (map.get(&quot;cat2&quot;) == null || map.get(&quot;cat2&quot;).equals(&quot;&quot;))) {&#xD;
	        sql += &quot;SELECT COUNT(*) FROM recipe r INNER JOIN recipe_category_kind rck ON rck.category_kind_idx = r.cate1 AND rck.category_kind_type ='방법별' AND rck.category_kind_idx = &quot;+map.get(&quot;cat1&quot;);&#xD;
	    } else if((map.get(&quot;cat1&quot;) == null || map.get(&quot;cat1&quot;).equals(&quot;&quot;)) &amp;&amp; map.get(&quot;cat2&quot;) != null) {&#xD;
	        sql += &quot;SELECT COUNT(*) FROM recipe r INNER JOIN recipe_category_kind rck ON rck.category_kind_idx = r.cate2 AND rck.category_kind_type ='재료별' AND rck.category_kind_idx =&quot; +map.get(&quot;cat2&quot;);&#xD;
	    } else if(map.get(&quot;cat1&quot;) != null &amp;&amp; map.get(&quot;cat2&quot;) != null) {&#xD;
	    	sql += &quot;SELECT COUNT(*) FROM recipe r INNER JOIN recipe_category_kind rck ON rck.category_kind_idx = r.cate1 INNER JOIN recipe_category_kind rck2 ON rck2.category_kind_idx = r.cate2 WHERE rck.category_kind_type ='방법별' AND rck.category_kind_idx=&quot; +map.get(&quot;cat1&quot;)+ &quot; AND rck2.category_kind_type ='재료별' AND rck2.category_kind_idx =&quot;+map.get(&quot;cat2&quot;);&#xD;
	    }else{&#xD;
	    	sql= &quot;SELECT COUNT(*) FROM recipe r&quot;;&#xD;
	    }&#xD;
	    try {&#xD;
	        psmt = con.prepareStatement(sql);&#xD;
	        rs = psmt.executeQuery();&#xD;
	        if (rs.next()) {&#xD;
	            count = rs.getInt(1);&#xD;
	        }&#xD;
	    } catch (Exception e) {&#xD;
	        System.out.println(&quot;게시물 Count 조회중 에러&quot;);&#xD;
	        e.printStackTrace();&#xD;
	    }&#xD;
	    return count;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDbRqOT6Ee22rp5Kgxfxyw" name="getList" specification="_dBvPkeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDbRqeT6Ee22rp5Kgxfxyw" name="map" type="_c4aUcOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDbRquT6Ee22rp5Kgxfxyw" type="_c4hCIOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDbRq-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;RecipeDto> list = new ArrayList&lt;>();&#xD;
	    String sql = &quot;&quot;;&#xD;
	    try {&#xD;
	        if (map.getCat1() != null &amp;&amp; (map.getCat2() == null || map.getCat2().equals(&quot;&quot;))) {&#xD;
	        	sql = &quot;SELECT r.*, u.user_nickname FROM recipe r INNER JOIN users u ON u.user_idx = r.user_idx INNER JOIN recipe_category_kind rck ON rck.category_kind_idx = r.cate1 AND rck.category_kind_type ='방법별' AND rck.category_kind_idx = &quot;+map.getCat1();&#xD;
	        }else if((map.getCat1() == null || map.getCat1().equals(&quot;&quot;)) &amp;&amp; map.getCat2() != null) {&#xD;
	        	sql = &quot;SELECT r.*, u.user_nickname FROM recipe r INNER JOIN users u ON u.user_idx = r.user_idx INNER JOIN recipe_category_kind rck ON rck.category_kind_idx = r.cate2 AND rck.category_kind_type ='재료별' AND rck.category_kind_idx =&quot; +map.getCat2();&#xD;
	        }else if(map.getCat1() != null &amp;&amp; map.getCat2() != null) {&#xD;
	            sql = &quot;SELECT r.*, u.user_nickname FROM recipe r INNER JOIN users u ON u.user_idx = r.user_idx Inner join recipe_category_kind rck ON rck.category_kind_idx = r.cate1 INNER JOIN recipe_category_kind rck2 ON rck2.category_kind_idx = r.cate2 &quot;&#xD;
	            		+ &quot;WHERE rck.category_kind_type ='방법별' AND rck.category_kind_idx=&quot; +map.getCat1()+ &quot; AND rck2.category_kind_type ='재료별' AND rck2.category_kind_idx =&quot; +map.getCat2();&#xD;
	        }else {&#xD;
	        	sql = &quot;SELECT r.*, u.user_nickname FROM recipe r INNER JOIN users u ON u.user_idx = r.user_idx&quot;;&#xD;
	        }&#xD;
	        sql += &quot; ORDER BY recipe_id DESC LIMIT ?, ?&quot;;&#xD;
&#xD;
	        System.out.println(sql);&#xD;
	        psmt = con.prepareStatement(sql);&#xD;
	        psmt.setInt(1, map.getStartNo());&#xD;
	        psmt.setInt(2, map.getPageSize());&#xD;
	        rs = psmt.executeQuery();&#xD;
	        while (rs.next()) {&#xD;
	            RecipeDto dto = new RecipeDto();&#xD;
	            dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
	            dto.setUser_idx(rs.getString(&quot;user_idx&quot;));&#xD;
	            dto.setRecipe_name(rs.getString(&quot;recipe_name&quot;));&#xD;
	            dto.setRecipe_desc(rs.getString(&quot;recipe_desc&quot;));&#xD;
	            dto.setRecipe_people(rs.getString(&quot;recipe_people&quot;));&#xD;
	            dto.setRecipe_time(rs.getString(&quot;recipe_time&quot;));&#xD;
	            dto.setRecipe_difficulty(rs.getString(&quot;recipe_difficulty&quot;));&#xD;
	            dto.setRecipe_image_url(rs.getString(&quot;recipe_image_url&quot;));&#xD;
	            dto.setUser_nickname(rs.getString(&quot;user_nickname&quot;));&#xD;
	            dto.setCate1(rs.getString(&quot;cate1&quot;));&#xD;
	            dto.setCate2(rs.getString(&quot;cate2&quot;));&#xD;
				/* dto.setCategory_kind_name(rs.getString(&quot;category_kind_name&quot;)); */&#xD;
	            dto.setRecipe_visitcount(rs.getInt(&quot;recipe_visitcount&quot;));&#xD;
	            list.add(dto);&#xD;
	        }&#xD;
	    } catch (SQLException e) {&#xD;
	        System.out.println(&quot;RecipeDao getRecipeList Error : &quot; + e.getMessage());&#xD;
	    } finally {&#xD;
	        close();&#xD;
	    }&#xD;
&#xD;
	    return list;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDb4sOT6Ee22rp5Kgxfxyw" name="updateVisitCount" specification="_c4EWMOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDb4seT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String sql = &quot;UPDATE recipe SET recipe_visitcount = recipe_visitcount +1 WHERE recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			psmt.executeUpdate();&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;조회수 증가 중 오류 발생&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDb4suT6Ee22rp5Kgxfxyw" name="detailView" specification="_c4E9QOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDb4s-T6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDb4tOT6Ee22rp5Kgxfxyw" type="_c4hCIOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>RecipeDto dto = new RecipeDto();&#xD;
		String sql = &quot;select * from recipe where recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			rs = psmt.executeQuery();&#xD;
			if (rs.next()) {&#xD;
				dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
				dto.setRecipe_name(rs.getString(&quot;recipe_name&quot;));&#xD;
				dto.setRecipe_desc(rs.getString(&quot;recipe_desc&quot;));&#xD;
				dto.setRecipe_people(rs.getString(&quot;recipe_people&quot;));&#xD;
				dto.setRecipe_time(rs.getString(&quot;recipe_time&quot;));&#xD;
				dto.setRecipe_difficulty(rs.getString(&quot;recipe_difficulty&quot;));&#xD;
				dto.setRecipe_image_url(rs.getString(&quot;recipe_image_url&quot;));&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;상세보기 불러오기 중 DB 오류&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return dto;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDb4teT6Ee22rp5Kgxfxyw" name="suggestionKeyword" specification="_c4FkUOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDb4tuT6Ee22rp5Kgxfxyw" name="recipe_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDb4t-T6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDb4uOT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>String sql = &quot;select recipe_name from recipe where recipe_name like concat('%&quot; + recipe_name + &quot;%')&quot;;&#xD;
		List&lt;String> list = new ArrayList&lt;>();&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			rs = psmt.executeQuery();&#xD;
			while (rs.next()) {&#xD;
				list.add(rs.getString(1));&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;실패&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return list;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDb4ueT6Ee22rp5Kgxfxyw" name="insertRecipe" specification="_dBv2pOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDb4uuT6Ee22rp5Kgxfxyw" name="dto" type="_c4hCIOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDb4u-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int result = 0;&#xD;
		String sql = &quot;insert into recipe (user_idx,recipe_name,recipe_desc,recipe_people,recipe_time,recipe_difficulty,recipe_image_url,cate1,cate2) values(?,?,?,?,?,?,?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1, dto.getUser_idx());&#xD;
			psmt.setString(2, dto.getRecipe_name());&#xD;
			psmt.setString(3, dto.getRecipe_desc());&#xD;
			psmt.setString(4, dto.getRecipe_people());&#xD;
			psmt.setString(5, dto.getRecipe_time());&#xD;
			psmt.setString(6, dto.getRecipe_difficulty());&#xD;
			psmt.setString(7, dto.getRecipe_image_url());&#xD;
			psmt.setString(8, dto.getCate1());&#xD;
			psmt.setString(9, dto.getCate2());&#xD;
&#xD;
			result = psmt.executeUpdate();&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;실패&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDcfwOT6Ee22rp5Kgxfxyw" name="updateRecipe" specification="_dBwdseT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDcfweT6Ee22rp5Kgxfxyw" name="dto" type="_c4hCIOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDcfwuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int result = 0;&#xD;
	    String sql = &quot;UPDATE recipe SET user_idx=?, recipe_name=?, recipe_desc=?, recipe_people=?, recipe_time=?, recipe_difficulty=?, recipe_image_url=? WHERE recipe_id=?&quot;;&#xD;
	    System.out.println(sql);&#xD;
	    System.out.println(dto);&#xD;
	    try {&#xD;
	        psmt = con.prepareStatement(sql);&#xD;
	        psmt.setString(1, dto.getUser_idx());&#xD;
	        psmt.setString(2, dto.getRecipe_name());&#xD;
	        psmt.setString(3, dto.getRecipe_desc());&#xD;
	        psmt.setString(4, dto.getRecipe_people());&#xD;
	        psmt.setString(5, dto.getRecipe_time());&#xD;
	        psmt.setString(6, dto.getRecipe_difficulty());&#xD;
	        psmt.setString(7, dto.getRecipe_image_url());&#xD;
	        psmt.setString(8, dto.getRecipe_id());&#xD;
	        result = psmt.executeUpdate();&#xD;
	    } catch (SQLException e) {&#xD;
	        System.out.println(&quot;실패&quot;);&#xD;
	        e.printStackTrace();&#xD;
	    }&#xD;
	    return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDcfw-T6Ee22rp5Kgxfxyw" name="getLastRecipeId" specification="_c4GycOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDcfxOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String lastIndex = &quot;&quot;;&#xD;
		String sql = &quot;SELECT recipe_id FROM recipe WHERE recipe_id = (SELECT MAX(recipe_id) FROM recipe)&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			rs = psmt.executeQuery();&#xD;
			if (rs.next())&#xD;
				lastIndex = rs.getString(&quot;recipe_id&quot;);&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;게시글 마지막 index 조회중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return lastIndex;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4DIEOT6Ee22rp5Kgxfxyw" name="RecipeDao" method="_dDbRo-T6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4DIEeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4DvIOT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4DvIeT6Ee22rp5Kgxfxyw" type="_c4ChAOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4EWMOT6Ee22rp5Kgxfxyw" name="updateVisitCount" method="_dDb4sOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4EWMeT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4E9QOT6Ee22rp5Kgxfxyw" name="detailView" method="_dDb4suT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBv2o-T6Ee22rp5Kgxfxyw" type="_c4hCIOT6Ee22rp5Kgxfxyw" direction="return"/>
            <ownedParameter xmi:id="_c4E9QeT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4FkUOT6Ee22rp5Kgxfxyw" name="suggestionKeyword" method="_dDb4teT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4FkUuT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4FkU-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4FkUeT6Ee22rp5Kgxfxyw" name="recipe_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4GycOT6Ee22rp5Kgxfxyw" name="getLastRecipeId" method="_dDcfw-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4GyceT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBvPkeT6Ee22rp5Kgxfxyw" name="getList" method="_dDbRqOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBv2oeT6Ee22rp5Kgxfxyw" type="_c4hCIOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dBv2ouT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBv2oOT6Ee22rp5Kgxfxyw" name="map" type="_c4aUcOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dBv2pOT6Ee22rp5Kgxfxyw" name="insertRecipe" method="_dDb4ueT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBwdsOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBv2peT6Ee22rp5Kgxfxyw" name="dto" type="_c4hCIOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dBwdseT6Ee22rp5Kgxfxyw" name="updateRecipe" method="_dDcfwOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBwds-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBwdsuT6Ee22rp5Kgxfxyw" name="dto" type="_c4hCIOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCmyQOT6Ee22rp5Kgxfxyw" name="getCount" method="_dDbRpeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCmyQuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dCmyQeT6Ee22rp5Kgxfxyw" name="map" type="_dBnTweT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4InoOT6Ee22rp5Kgxfxyw" name="RecipeIngredientDao">
          <generalization xmi:id="_dBxr0OT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDcfxeT6Ee22rp5Kgxfxyw" name="RecipeIngredientDao" specification="_c4JOsOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDcfxuT6Ee22rp5Kgxfxyw" type="_c4InoOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDcfx-T6Ee22rp5Kgxfxyw" name="detailView" specification="_c4J1w-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDcfyOT6Ee22rp5Kgxfxyw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDcfyeT6Ee22rp5Kgxfxyw" type="_c4lTkOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDcfyuT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>String sql = &quot;select * from recipe_ingredient where recipe_id=?&quot;;&#xD;
		List&lt;RecipeIngredientDto> list= new ArrayList&lt;>();&#xD;
		try {&#xD;
			psmt= con.prepareStatement(sql);&#xD;
			psmt.setString(1, id);&#xD;
			rs=psmt.executeQuery();&#xD;
			while(rs.next()) {&#xD;
				RecipeIngredientDto dto = new RecipeIngredientDto();&#xD;
				dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
				dto.setIngredient_name(rs.getString(&quot;ingredient_name&quot;));&#xD;
				dto.setIngredient_amount(rs.getString(&quot;ingredient_amount&quot;));&#xD;
				list.add(dto);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;재료 검색 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return list;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdG0OT6Ee22rp5Kgxfxyw" name="insertIngredient" specification="_dBxEwOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdG0eT6Ee22rp5Kgxfxyw" name="dto" type="_c4lTkOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String sql = &quot;insert into recipe_ingredient(recipe_id,ingredient_name,ingredient_amount) values(?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, dto.getRecipe_id());&#xD;
			psmt.setString(2, dto.getIngredient_name());&#xD;
			psmt.setString(3, dto.getIngredient_amount());&#xD;
			psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;재료 DB 입력중 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdG0uT6Ee22rp5Kgxfxyw" name="deleteIngredient" specification="_c4Kc0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdG0-T6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String sql = &quot;delete from recipe_ingredient where recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;재료 DB 삭제중 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4JOsOT6Ee22rp5Kgxfxyw" name="RecipeIngredientDao" method="_dDcfxeT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4J1wOT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4J1weT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4J1wuT6Ee22rp5Kgxfxyw" type="_c4InoOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4J1w-T6Ee22rp5Kgxfxyw" name="detailView" method="_dDcfx-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4J1xeT6Ee22rp5Kgxfxyw" type="_c4lTkOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4J1xuT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4J1xOT6Ee22rp5Kgxfxyw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4Kc0OT6Ee22rp5Kgxfxyw" name="deleteIngredient" method="_dDdG0uT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4Kc0eT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBxEwOT6Ee22rp5Kgxfxyw" name="insertIngredient" method="_dDdG0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBxEweT6Ee22rp5Kgxfxyw" name="dto" type="_c4lTkOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4Lq8OT6Ee22rp5Kgxfxyw" name="RecipeReviewDao">
          <generalization xmi:id="_dByS4uT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdG1OT6Ee22rp5Kgxfxyw" name="RecipeReviewDao" specification="_c4MSAOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdG1eT6Ee22rp5Kgxfxyw" type="_c4Lq8OT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdG1uT6Ee22rp5Kgxfxyw" name="getreviewCount" specification="_c4M5EOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdG1-T6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDdG2OT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int count=0;&#xD;
   String sql= &quot;select count(*) from review where recipe_id=?&quot;;&#xD;
   try {&#xD;
      psmt=con.prepareStatement(sql);&#xD;
      psmt.setString(1, recipe_id);&#xD;
      rs = psmt.executeQuery();&#xD;
      rs.next();&#xD;
      count = rs.getInt(1);&#xD;
   } catch (Exception e) {&#xD;
      System.out.println(&quot;게시물 후기 Count 조회중 DB 오류&quot;);&#xD;
      e.printStackTrace();&#xD;
   }&#xD;
   return count;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdt4OT6Ee22rp5Kgxfxyw" name="detailView" specification="_c4NgIOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdt4eT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDdt4uT6Ee22rp5Kgxfxyw" type="_c4mhsOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDdt4-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;RecipeReviewDto> list = new ArrayList&lt;>();&#xD;
   String sql= &quot;select r.*, u.user_nickname from review r, users u &quot;&#xD;
         + &quot;where u.user_idx=r.user_idx and recipe_id=? order by review_id&quot;;&#xD;
   try {&#xD;
      psmt = con.prepareStatement(sql);&#xD;
      psmt.setString(1, recipe_id);&#xD;
      rs=psmt.executeQuery();&#xD;
      while(rs.next()) {&#xD;
         RecipeReviewDto dto = new RecipeReviewDto();&#xD;
         dto.setReview_id(rs.getString(&quot;review_id&quot;));&#xD;
         dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
         dto.setUser_idx(rs.getString(&quot;user_idx&quot;));&#xD;
         dto.setReview_rating(rs.getInt(&quot;review_rating&quot;));&#xD;
         dto.setReview_content(rs.getString(&quot;review_content&quot;));&#xD;
         dto.setReview_date(rs.getTimestamp(&quot;review_date&quot;));&#xD;
         dto.setUser_nickname(rs.getString(&quot;user_nickname&quot;));&#xD;
         list.add(dto);&#xD;
      }&#xD;
   }catch (Exception e) {&#xD;
      System.out.println(&quot;후기 조회중 DB 오류&quot;);&#xD;
      e.printStackTrace();&#xD;
   }&#xD;
   &#xD;
   return list;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdt5OT6Ee22rp5Kgxfxyw" name="insertReview" specification="_dBxr0eT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdt5eT6Ee22rp5Kgxfxyw" name="dto" type="_c4mhsOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDdt5uT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>System.out.println(&quot;리뷰인서트진입&quot;);&#xD;
	   System.out.println(dto);&#xD;
   int res=0;&#xD;
   String sql = &quot;insert into review (recipe_id, user_idx, review_rating, review_content) values(?,?,?,?)&quot;;&#xD;
   try {&#xD;
      psmt=con.prepareStatement(sql);&#xD;
      psmt.setString(1, dto.getRecipe_id());&#xD;
      psmt.setString(2, dto.getUser_idx());&#xD;
      psmt.setInt(3, dto.getReview_rating());&#xD;
      psmt.setString(4, dto.getReview_content());&#xD;
      res = psmt.executeUpdate();&#xD;
   } catch (Exception e) {&#xD;
 	  System.out.println(&quot;리뷰 입력 중 DB 오류: &quot; + e.getMessage());&#xD;
       e.printStackTrace();&#xD;
   }&#xD;
   return res;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdt5-T6Ee22rp5Kgxfxyw" name="getLastReviewId" specification="_c4OHMOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdt6OT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String lastIndex = &quot;&quot;;&#xD;
   String sql = &quot;SELECT review_id FROM review WHERE review_id = (SELECT MAX(review_id) FROM review)&quot;;&#xD;
   try {&#xD;
      psmt = con.prepareStatement(sql);&#xD;
      rs = psmt.executeQuery();&#xD;
      if (rs.next())&#xD;
         lastIndex = rs.getString(&quot;review_id&quot;);&#xD;
   } catch (Exception e) {&#xD;
      System.out.println(&quot;게시글 마지막 index 조회중 DB 에러&quot;);&#xD;
      e.printStackTrace();&#xD;
   }&#xD;
   return lastIndex;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDdt6eT6Ee22rp5Kgxfxyw" name="deleteReview" specification="_c4OHMuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDdt6uT6Ee22rp5Kgxfxyw" name="review_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDdt6-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int res = 0;&#xD;
		String sql = &quot;DELETE FROM review WHERE review_id=?&quot;;&#xD;
		try {&#xD;
			psmt= con.prepareStatement(sql);&#xD;
			psmt.setString(1, review_id);&#xD;
			res = psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;리뷰 삭제중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return res;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4MSAOT6Ee22rp5Kgxfxyw" name="RecipeReviewDao" method="_dDdG1OT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4MSAeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4MSAuT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4MSA-T6Ee22rp5Kgxfxyw" type="_c4Lq8OT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4M5EOT6Ee22rp5Kgxfxyw" name="getreviewCount" method="_dDdG1uT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4M5EuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4M5EeT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4NgIOT6Ee22rp5Kgxfxyw" name="detailView" method="_dDdt4OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4NgIuT6Ee22rp5Kgxfxyw" type="_c4mhsOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4NgI-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4NgIeT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4OHMOT6Ee22rp5Kgxfxyw" name="getLastReviewId" method="_dDdt5-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4OHMeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4OHMuT6Ee22rp5Kgxfxyw" name="deleteReview" method="_dDdt6eT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4OuQeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4OuQOT6Ee22rp5Kgxfxyw" name="review_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBxr0eT6Ee22rp5Kgxfxyw" name="insertReview" method="_dDdt5OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dByS4eT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dByS4OT6Ee22rp5Kgxfxyw" name="dto" type="_c4mhsOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4PVUOT6Ee22rp5Kgxfxyw" name="RecipeStepDao">
          <generalization xmi:id="_dBzhAOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDeU8OT6Ee22rp5Kgxfxyw" name="RecipeStepDao" specification="_c4P8YOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDeU8eT6Ee22rp5Kgxfxyw" type="_c4PVUOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDeU8uT6Ee22rp5Kgxfxyw" name="detailView" specification="_c4QjcOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDeU8-T6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDeU9OT6Ee22rp5Kgxfxyw" type="_c4plAOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDeU9eT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;RecipeStepDto> list = new ArrayList&lt;>();&#xD;
		String sql=&quot;select * from recipe_step where recipe_id=? order by step_id&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			rs = psmt.executeQuery();&#xD;
			while(rs.next()) {&#xD;
				RecipeStepDto dto = new RecipeStepDto();&#xD;
				dto.setStep_id(rs.getString(&quot;step_id&quot;));&#xD;
				dto.setRecipe_id(rs.getString(&quot;recipe_id&quot;));&#xD;
				dto.setStep_desc(rs.getString(&quot;step_desc&quot;));&#xD;
				dto.setStep_image_url(rs.getString(&quot;step_image_url&quot;));&#xD;
				list.add(dto);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;조리 과정 조회중 오류 발생&quot;);&#xD;
		}&#xD;
		return list;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDeU9uT6Ee22rp5Kgxfxyw" name="insertSteps" specification="_dBy58OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDeU9-T6Ee22rp5Kgxfxyw" name="dto" type="_c4plAOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDeU-OT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int res =0 ;&#xD;
		String sql =&quot;insert into recipe_step(recipe_id,step_desc,step_image_url) values(?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt= con.prepareStatement(sql);&#xD;
			psmt.setString(1, dto.getRecipe_id());&#xD;
			psmt.setString(2, dto.getStep_desc());&#xD;
			psmt.setString(3, dto.getStep_image_url());&#xD;
			res = psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;조리 과정 DB 입력 중 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return res;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDeU-eT6Ee22rp5Kgxfxyw" name="deleteSteps" specification="_c4RxkOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDeU-uT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String sql = &quot;delete from recipe_step where recipe_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, recipe_id);&#xD;
			psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;조리과정 DB 삭제중 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4P8YOT6Ee22rp5Kgxfxyw" name="RecipeStepDao" method="_dDeU8OT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4P8YeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4P8YuT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4P8Y-T6Ee22rp5Kgxfxyw" type="_c4PVUOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4QjcOT6Ee22rp5Kgxfxyw" name="detailView" method="_dDeU8uT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4RKgOT6Ee22rp5Kgxfxyw" type="_c4plAOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4RKgeT6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4QjceT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4RxkOT6Ee22rp5Kgxfxyw" name="deleteSteps" method="_dDeU-eT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4RxkeT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBy58OT6Ee22rp5Kgxfxyw" name="insertSteps" method="_dDeU9uT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBy58uT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBy58eT6Ee22rp5Kgxfxyw" name="dto" type="_c4plAOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4S_sOT6Ee22rp5Kgxfxyw" name="ReviewImgDao">
          <generalization xmi:id="_dB0IEOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDeU--T6Ee22rp5Kgxfxyw" name="ReviewImgDao" specification="_c4TmwOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDeU_OT6Ee22rp5Kgxfxyw" type="_c4S_sOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDe8AOT6Ee22rp5Kgxfxyw" name="insertReviewImage" specification="_dBzhAeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDe8AeT6Ee22rp5Kgxfxyw" name="dto" type="_c4qzIOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDe8AuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int res=0;&#xD;
   String sql = &quot;insert into review_img(review_id, img_image_url) values(?,?)&quot;;&#xD;
   try {&#xD;
      psmt= con.prepareStatement(sql);&#xD;
      psmt.setString(1, dto.getReview_id());&#xD;
      psmt.setString(2, dto.getImg_image_url());&#xD;
      res = psmt.executeUpdate();&#xD;
   } catch (Exception e) {&#xD;
      System.out.println(&quot;리뷰 이미지 데이터 저장중 DB 에러&quot;);&#xD;
      e.printStackTrace();&#xD;
   }   &#xD;
   return res;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDe8A-T6Ee22rp5Kgxfxyw" name="getImgList" specification="_c4UN0uT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDe8BOT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDe8BeT6Ee22rp5Kgxfxyw" name="review_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDe8BuT6Ee22rp5Kgxfxyw" type="_c4qzIOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dDe8B-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>List&lt;ReviewImgDto> list = new ArrayList&lt;>();&#xD;
   String sql = &quot;SELECT ri.img_image_url, r.review_id, r.recipe_id FROM review r JOIN review_img ri ON r.review_id = ri.review_id WHERE r.recipe_id = ? and ri.review_id = ?&quot;;&#xD;
   try {&#xD;
      psmt=con.prepareStatement(sql);&#xD;
      psmt.setString(1, recipe_id);&#xD;
      psmt.setString(2, review_id);&#xD;
      rs= psmt.executeQuery();&#xD;
      while(rs.next()) {&#xD;
         ReviewImgDto dto = new ReviewImgDto();&#xD;
         dto.setImg_image_url(rs.getString(1));&#xD;
         dto.setReview_id(rs.getString(2));&#xD;
         dto.setRecipe_id(rs.getString(3));&#xD;
         list.add(dto);&#xD;
      }&#xD;
   } catch (Exception e) {&#xD;
      System.out.println(&quot;이미지 리스트 DB 조회 실패&quot;);&#xD;
      e.printStackTrace();&#xD;
   }&#xD;
   return list;&#xD;
</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4TmwOT6Ee22rp5Kgxfxyw" name="ReviewImgDao" method="_dDeU--T6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4TmweT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4UN0OT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4UN0eT6Ee22rp5Kgxfxyw" type="_c4S_sOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4UN0uT6Ee22rp5Kgxfxyw" name="getImgList" method="_dDe8A-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4U04uT6Ee22rp5Kgxfxyw" type="_c4qzIOT6Ee22rp5Kgxfxyw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_c4U04-T6Ee22rp5Kgxfxyw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4U04OT6Ee22rp5Kgxfxyw" name="recipe_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4U04eT6Ee22rp5Kgxfxyw" name="review_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dBzhAeT6Ee22rp5Kgxfxyw" name="insertReviewImage" method="_dDe8AOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dBzhA-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dBzhAuT6Ee22rp5Kgxfxyw" name="dto" type="_c4qzIOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4WDAOT6Ee22rp5Kgxfxyw" name="UsersDao">
          <generalization xmi:id="_dB0vIuT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDe8COT6Ee22rp5Kgxfxyw" name="UsersDao" specification="_c4WqEOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDe8CeT6Ee22rp5Kgxfxyw" type="_c4WDAOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDe8CuT6Ee22rp5Kgxfxyw" name="loginProcess" specification="_c4XRIOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDe8C-T6Ee22rp5Kgxfxyw" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDe8DOT6Ee22rp5Kgxfxyw" name="user_pw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDe8DeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>//customer 가 모델객체입니다.(로그인정보 저장된상태)&#xD;
		//아디비번 맞는지 확인&#xD;
		String result = &quot;&quot;;&#xD;
		String sql = &quot;select * from users where user_id=? and user_pw=?&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1,user_id);&#xD;
			psmt.setString(2, user_pw);&#xD;
			rs=psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				result=user_id;&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;로그인 Check중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDfjEOT6Ee22rp5Kgxfxyw" name="sessionLogin" specification="_c4X4MOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDfjEeT6Ee22rp5Kgxfxyw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDfjEuT6Ee22rp5Kgxfxyw" type="_c4tPYOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>SessionDto dto = new SessionDto();&#xD;
		String sql=&quot;select * from users where user_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, id);&#xD;
			rs=psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				dto.setUser_nickname(rs.getString(&quot;user_nickname&quot;));&#xD;
				dto.setUser_idx(rs.getString(&quot;user_idx&quot;));&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;유저 정보 조회 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return dto;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDfjE-T6Ee22rp5Kgxfxyw" name="joinUser" specification="_dB0IEuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDfjFOT6Ee22rp5Kgxfxyw" name="dto" type="_c4udgOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDfjFeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int res=0;&#xD;
		String sql = &quot;insert into users(user_id, user_pw, user_name, user_nickname, user_email, user_address, user_phone) values(?,?,?,?,?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, dto.getUser_id());&#xD;
			psmt.setString(2, dto.getUser_pw());&#xD;
			psmt.setString(3, dto.getUser_name());&#xD;
			psmt.setString(4, dto.getUser_nickname());&#xD;
			psmt.setString(5, dto.getUser_email());&#xD;
			psmt.setString(6, dto.getUser_address());&#xD;
			psmt.setString(7, dto.getUser_phone());&#xD;
			res = psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;회원 가입중 오류&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return res;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDfjFuT6Ee22rp5Kgxfxyw" name="idDuplicateCheck" specification="_c4YfQOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDfjF-T6Ee22rp5Kgxfxyw" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDfjGOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean res = true;&#xD;
		String sql = &quot;select user_id from users where user_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, user_id);&#xD;
			rs = psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				res=false;&#xD;
				System.out.println(&quot;중복&quot;);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;중복 체크중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}		&#xD;
		return res;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4WqEOT6Ee22rp5Kgxfxyw" name="UsersDao" method="_dDe8COT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4WqEeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4WqEuT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4WqE-T6Ee22rp5Kgxfxyw" type="_c4WDAOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4XRIOT6Ee22rp5Kgxfxyw" name="loginProcess" method="_dDe8CuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4XRIeT6Ee22rp5Kgxfxyw" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4XRIuT6Ee22rp5Kgxfxyw" name="user_pw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4XRI-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_c4X4MOT6Ee22rp5Kgxfxyw" name="sessionLogin" method="_dDfjEOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4X4MeT6Ee22rp5Kgxfxyw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dB0IEeT6Ee22rp5Kgxfxyw" type="_c4tPYOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_c4YfQOT6Ee22rp5Kgxfxyw" name="idDuplicateCheck" method="_dDfjFuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4YfQeT6Ee22rp5Kgxfxyw" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4YfQuT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dB0IEuT6Ee22rp5Kgxfxyw" name="joinUser" method="_dDfjE-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dB0vIOT6Ee22rp5Kgxfxyw" name="dto" type="_c4udgOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dB0vIeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0TQgeT6Ee22rp5Kgxfxyw" name="dto">
        <packagedElement xmi:type="uml:Class" xmi:id="_c4ZtYOT6Ee22rp5Kgxfxyw" name="IngredientDto">
          <ownedAttribute xmi:id="_dC67UOT6Ee22rp5Kgxfxyw" name="ingredient_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC67UeT6Ee22rp5Kgxfxyw" name="ingredient_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4aUcOT6Ee22rp5Kgxfxyw" name="PageDto">
          <ownedAttribute xmi:id="_dC7iYOT6Ee22rp5Kgxfxyw" name="currentPage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC7iYeT6Ee22rp5Kgxfxyw" name="pageSize">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8JcOT6Ee22rp5Kgxfxyw" name="totalCount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8JceT6Ee22rp5Kgxfxyw" name="startNo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8wgOT6Ee22rp5Kgxfxyw" name="totalPage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8wgeT6Ee22rp5Kgxfxyw" name="startPage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8wguT6Ee22rp5Kgxfxyw" name="endPage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC8wg-T6Ee22rp5Kgxfxyw" name="cat1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC9XkOT6Ee22rp5Kgxfxyw" name="cat2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgKIOT6Ee22rp5Kgxfxyw" name="PageDto" specification="_c4cJoOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDgKIeT6Ee22rp5Kgxfxyw" name="currentPage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgKIuT6Ee22rp5Kgxfxyw" name="totalCount">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgKI-T6Ee22rp5Kgxfxyw" name="pageSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgKJOT6Ee22rp5Kgxfxyw" name="cat1">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgKJeT6Ee22rp5Kgxfxyw" name="cat2">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgKJuT6Ee22rp5Kgxfxyw" type="_c4aUcOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	    this.currentPage = currentPage;&#xD;
	    this.pageSize = pageSize;&#xD;
	    this.totalCount = totalCount;&#xD;
	    totalPage = (totalCount + pageSize - 1) / pageSize;&#xD;
	    &#xD;
	    this.currentPage = (currentPage > totalPage || currentPage &lt; 1) ? 1 : currentPage;&#xD;
	    startNo = (this.currentPage - 1) * pageSize;&#xD;
	    &#xD;
	    startPage = ((this.currentPage - 1) / 10) * 10 + 1;&#xD;
	    endPage = startPage + 9;&#xD;
	    if (endPage > totalPage) {&#xD;
	        endPage = totalPage;&#xD;
	    }&#xD;
	    &#xD;
	    this.cat1 = cat1;&#xD;
	    this.cat2 = cat2;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4cJoOT6Ee22rp5Kgxfxyw" name="PageDto" method="_dDgKIOT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c4cJpuT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c4cJp-T6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c4cJqOT6Ee22rp5Kgxfxyw" type="_c4aUcOT6Ee22rp5Kgxfxyw" direction="return"/>
            <ownedParameter xmi:id="_c4cJoeT6Ee22rp5Kgxfxyw" name="currentPage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4cJouT6Ee22rp5Kgxfxyw" name="totalCount">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4cJo-T6Ee22rp5Kgxfxyw" name="pageSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4cJpOT6Ee22rp5Kgxfxyw" name="cat1">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_c4cJpeT6Ee22rp5Kgxfxyw" name="cat2">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4d-0OT6Ee22rp5Kgxfxyw" name="RecipeCategoryKindDto">
          <ownedAttribute xmi:id="_dC9XkeT6Ee22rp5Kgxfxyw" name="category_kind_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC9-oOT6Ee22rp5Kgxfxyw" name="category_kind_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC9-oeT6Ee22rp5Kgxfxyw" name="category_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4fM8OT6Ee22rp5Kgxfxyw" name="RecipeCommentDto">
          <ownedAttribute xmi:id="_dC9-ouT6Ee22rp5Kgxfxyw" name="comment_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC-lsOT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC-lseT6Ee22rp5Kgxfxyw" name="user_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC-lsuT6Ee22rp5Kgxfxyw" name="comment_content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dC_MwOT6Ee22rp5Kgxfxyw" name="comment_date" type="_dB19QOT6Ee22rp5Kgxfxyw" association="_dDpUEOT6Ee22rp5Kgxfxyw"/>
          <ownedAttribute xmi:id="_dC_MweT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4hCIOT6Ee22rp5Kgxfxyw" name="RecipeDto">
          <ownedAttribute xmi:id="_dC_z0OT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDAa4OT6Ee22rp5Kgxfxyw" name="user_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDAa4eT6Ee22rp5Kgxfxyw" name="recipe_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDAa4uT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBB8OT6Ee22rp5Kgxfxyw" name="recipe_desc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBB8eT6Ee22rp5Kgxfxyw" name="recipe_people">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBB8uT6Ee22rp5Kgxfxyw" name="recipe_time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBB8-T6Ee22rp5Kgxfxyw" name="recipe_difficulty">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBpAOT6Ee22rp5Kgxfxyw" name="recipe_image_url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDBpAeT6Ee22rp5Kgxfxyw" name="recipe_visitcount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDCQEOT6Ee22rp5Kgxfxyw" name="cate1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDCQEeT6Ee22rp5Kgxfxyw" name="cate2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDCQEuT6Ee22rp5Kgxfxyw" name="recipe_visitCount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgKJ-T6Ee22rp5Kgxfxyw" name="toString" specification="_c4iQQOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDgKKOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;RecipeDto [recipe_id=&quot; + recipe_id + &quot;, user_idx=&quot; + user_idx + &quot;, recipe_name=&quot; + recipe_name&#xD;
				+ &quot;, user_nickname=&quot; + user_nickname + &quot;, recipe_desc=&quot; + recipe_desc + &quot;, recipe_people=&quot;&#xD;
				+ recipe_people + &quot;, recipe_time=&quot; + recipe_time + &quot;, recipe_difficulty=&quot; + recipe_difficulty&#xD;
				+ &quot;, recipe_image_url=&quot; + recipe_image_url + &quot;, recipe_visitCount=&quot; + recipe_visitCount + &quot;]&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4iQQOT6Ee22rp5Kgxfxyw" name="toString" method="_dDgKJ-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4i3UOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4lTkOT6Ee22rp5Kgxfxyw" name="RecipeIngredientDto">
          <ownedAttribute xmi:id="_dDC3IOT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDC3IeT6Ee22rp5Kgxfxyw" name="ingredient_amount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDC3IuT6Ee22rp5Kgxfxyw" name="ingredient_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4mhsOT6Ee22rp5Kgxfxyw" name="RecipeReviewDto">
          <ownedAttribute xmi:id="_dDDeMOT6Ee22rp5Kgxfxyw" name="review_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDDeMeT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDDeMuT6Ee22rp5Kgxfxyw" name="user_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDEFQOT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDEFQeT6Ee22rp5Kgxfxyw" name="review_rating">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDEFQuT6Ee22rp5Kgxfxyw" name="review_content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDEsUOT6Ee22rp5Kgxfxyw" name="review_date" type="_dB3ycOT6Ee22rp5Kgxfxyw" association="_dDp7IOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgxMOT6Ee22rp5Kgxfxyw" name="toString" specification="_c4nv0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDgxMeT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;RecipeReviewDto [review_id=&quot; + review_id + &quot;, recipe_id=&quot; + recipe_id + &quot;, user_idx=&quot; + user_idx&#xD;
				+ &quot;, user_nickname=&quot; + user_nickname + &quot;, review_rating=&quot; + review_rating + &quot;, review_content=&quot;&#xD;
				+ review_content + &quot;, review_date=&quot; + review_date + &quot;]&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4nv0OT6Ee22rp5Kgxfxyw" name="toString" method="_dDgxMOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4nv0eT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4plAOT6Ee22rp5Kgxfxyw" name="RecipeStepDto">
          <ownedAttribute xmi:id="_dDEsUeT6Ee22rp5Kgxfxyw" name="step_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDFTYOT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDFTYeT6Ee22rp5Kgxfxyw" name="step_desc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDFTYuT6Ee22rp5Kgxfxyw" name="step_image_url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4qzIOT6Ee22rp5Kgxfxyw" name="ReviewImgDto">
          <ownedAttribute xmi:id="_dDF6cOT6Ee22rp5Kgxfxyw" name="img_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDF6ceT6Ee22rp5Kgxfxyw" name="review_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDGhgOT6Ee22rp5Kgxfxyw" name="img_image_url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDGhgeT6Ee22rp5Kgxfxyw" name="recipe_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgxMuT6Ee22rp5Kgxfxyw" name="toString" specification="_c4raMOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDgxM-T6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;ReviewImgDto [img_id=&quot; + img_id + &quot;, img_image_url=&quot; + img_image_url + &quot;, recipe_id=&quot; + recipe_id&#xD;
				+ &quot;, review_id=&quot; + review_id + &quot;]&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c4raMOT6Ee22rp5Kgxfxyw" name="toString" method="_dDgxMuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_c4sBQOT6Ee22rp5Kgxfxyw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4tPYOT6Ee22rp5Kgxfxyw" name="SessionDto">
          <ownedAttribute xmi:id="_dDHIkOT6Ee22rp5Kgxfxyw" name="user_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDHIkeT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDHIkuT6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDHvoOT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c4udgOT6Ee22rp5Kgxfxyw" name="UsersDto">
          <ownedAttribute xmi:id="_dDIWsOT6Ee22rp5Kgxfxyw" name="user_idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDIWseT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDIWsuT6Ee22rp5Kgxfxyw" name="user_pw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDI9wOT6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDI9weT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDI9wuT6Ee22rp5Kgxfxyw" name="user_email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDI9w-T6Ee22rp5Kgxfxyw" name="user_address">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dDJk0OT6Ee22rp5Kgxfxyw" name="user_phone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_dDpUEOT6Ee22rp5Kgxfxyw" name="" memberEnd="_dC_MwOT6Ee22rp5Kgxfxyw _dDpUEeT6Ee22rp5Kgxfxyw">
          <ownedEnd xmi:id="_dDpUEeT6Ee22rp5Kgxfxyw" name="" type="_c4fM8OT6Ee22rp5Kgxfxyw" association="_dDpUEOT6Ee22rp5Kgxfxyw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_dDp7IOT6Ee22rp5Kgxfxyw" name="" memberEnd="_dDEsUOT6Ee22rp5Kgxfxyw _dDp7IeT6Ee22rp5Kgxfxyw">
          <ownedEnd xmi:id="_dDp7IeT6Ee22rp5Kgxfxyw" name="" type="_c4mhsOT6Ee22rp5Kgxfxyw" association="_dDp7IOT6Ee22rp5Kgxfxyw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0WT0OT6Ee22rp5Kgxfxyw" name="controller">
        <packagedElement xmi:type="uml:Class" xmi:id="_c28U0OT6Ee22rp5Kgxfxyw" name="CommentDeleteController">
          <generalization xmi:id="_dCWTkuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDWZIeT6Ee22rp5Kgxfxyw" name="service" specification="_dCTQQOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDWZIuT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDWZI-T6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
		String comment_id = req.getParameter(&quot;comment_id&quot;);&#xD;
		RecipeCommentDao dao = new RecipeCommentDao();&#xD;
		dao.deleteComment(comment_id);&#xD;
	&#xD;
		List&lt;RecipeCommentDto> commentList = dao.detailView(recipe_id);&#xD;
&#xD;
		Gson gson = new Gson();&#xD;
		String json = gson.toJson(commentList);&#xD;
&#xD;
		resp.setContentType(&quot;application/json&quot;);&#xD;
		resp.setCharacterEncoding(&quot;UTF-8&quot;);&#xD;
		resp.getWriter().write(json);&#xD;
		dao.close();&#xD;
		&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCTQQOT6Ee22rp5Kgxfxyw" name="service" visibility="protected" method="_dDWZIeT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCTQQeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCTQQuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3CbcOT6Ee22rp5Kgxfxyw" name="CommentWriteController">
          <generalization xmi:id="_dCXhsOT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXAMOT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCW6oOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXAMeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXAMuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
     String user_idx = req.getParameter(&quot;user_idx&quot;);&#xD;
     String comment_content= req.getParameter(&quot;comment_content&quot;);&#xD;
     RecipeCommentDto dto = new RecipeCommentDto();&#xD;
     dto.setRecipe_id(recipe_id);&#xD;
     dto.setUser_idx(user_idx);&#xD;
     dto.setComment_content(comment_content);&#xD;
     &#xD;
     RecipeCommentDao dao = new RecipeCommentDao();&#xD;
     dao.writeComment(dto);&#xD;
     &#xD;
     List&lt;RecipeCommentDto> commentList = dao.detailView(recipe_id);&#xD;
     &#xD;
     dao.close();&#xD;
     Gson gson = new Gson();&#xD;
     String json = gson.toJson(commentList);&#xD;
  &#xD;
     &#xD;
     resp.setContentType(&quot;application/json&quot;);&#xD;
     resp.setCharacterEncoding(&quot;UTF-8&quot;);&#xD;
     resp.getWriter().write(json);&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCW6oOT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDXAMOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCW6oeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCW6ouT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3Gs4OT6Ee22rp5Kgxfxyw" name="HomeController"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3H7AOT6Ee22rp5Kgxfxyw" name="JoinController">
          <generalization xmi:id="_dCZ98eT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXAM-T6Ee22rp5Kgxfxyw" name="doGet" specification="_dCXhseT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXANOT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXANeT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>resp.sendRedirect(&quot;../RecipeProject/Join.jsp&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXANuT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCYv0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXAN-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXAOOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String user_id=req.getParameter(&quot;user_id&quot;);&#xD;
		String user_pw=req.getParameter(&quot;user_pw&quot;);&#xD;
		String user_name=req.getParameter(&quot;user_name&quot;);&#xD;
		String user_nickname=req.getParameter(&quot;user_nickname&quot;);&#xD;
		String user_email=req.getParameter(&quot;user_email&quot;);&#xD;
		String user_address=req.getParameter(&quot;user_address&quot;);&#xD;
		String user_phone=req.getParameter(&quot;user_phone&quot;);&#xD;
		&#xD;
		UsersDto dto = new UsersDto();&#xD;
		dto.setUser_id(user_id);&#xD;
		dto.setUser_pw(user_pw);&#xD;
		dto.setUser_name(user_name);&#xD;
		dto.setUser_nickname(user_nickname);&#xD;
		dto.setUser_email(user_email);&#xD;
		dto.setUser_address(user_address);&#xD;
		dto.setUser_phone(user_phone);&#xD;
		UsersDao dao = new UsersDao();&#xD;
		if(dao.joinUser(dto)==0) {&#xD;
			dao.close();&#xD;
			System.out.println(&quot;회원가입 실패&quot;);&#xD;
			Alert.alertLocation(resp, &quot;가입이 실패하였습니다&quot;, &quot;../project/join.do&quot;);&#xD;
		}else {&#xD;
			dao.close();&#xD;
			System.out.println(&quot;회원가입 성공&quot;);&#xD;
			Alert.alertLocation(resp, &quot;회원가입 성공&quot;, &quot;../RecipeProject/Login.jsp&quot;);&#xD;
		}&#xD;
		&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCXhseT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDXAM-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCXhsuT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCXhs-T6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCYv0OT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDXANuT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCYv0eT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCZW4OT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3OosOT6Ee22rp5Kgxfxyw" name="LoginController">
          <generalization xmi:id="_dCbzIuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXnQOT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCalAOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXnQeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXnQuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>resp.sendRedirect(&quot;../RecipeProject/Login.jsp&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXnQ-T6Ee22rp5Kgxfxyw" name="doPost" specification="_dCbMEuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXnROT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXnReT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>HttpSession session = req.getSession();&#xD;
		String user_id=req.getParameter(&quot;user_id&quot;);&#xD;
		String user_pw=req.getParameter(&quot;user_pw&quot;);&#xD;
		UsersDao dao = new UsersDao();&#xD;
		SessionDto user = new SessionDto();&#xD;
		&#xD;
		String check = dao.loginProcess(user_id, user_pw);&#xD;
		if(!check.equals(&quot;&quot;)) {&#xD;
			user=dao.sessionLogin(user_id);&#xD;
			session.setAttribute(&quot;user&quot;,user);&#xD;
			session.setMaxInactiveInterval(1800);&#xD;
&#xD;
			resp.sendRedirect(&quot;../project/recipeList.do&quot;);&#xD;
		}&#xD;
		else {&#xD;
			resp.sendRedirect(&quot;../RecipeProject/Login.jsp&quot;);&#xD;
		}&#xD;
		dao.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCalAOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDXnQOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCalAeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCalAuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCbMEuT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDXnQ-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCbME-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCbMFOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3UvUOT6Ee22rp5Kgxfxyw" name="LogoutController">
          <generalization xmi:id="_dCdBQuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXnRuT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCcaMOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDXnR-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDXnSOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>HttpSession session = req.getSession();&#xD;
		session.invalidate();&#xD;
		resp.sendRedirect(&quot;../project/recipeList.do&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCcaMOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDXnRuT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCcaMeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCcaMuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3YZsOT6Ee22rp5Kgxfxyw" name="RecipeEditController">
          <generalization xmi:id="_dCePZeT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedAttribute xmi:id="_dC5tMOT6Ee22rp5Kgxfxyw" name="recipe_id" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dC5tMeT6Ee22rp5Kgxfxyw" value="&quot;&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDXnSeT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCdoUOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDYOUOT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDYOUeT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
     RecipeDao racipe_dao = new RecipeDao();&#xD;
     RecipeIngredientDao recipeIngredientDao = new RecipeIngredientDao();&#xD;
     RecipeStepDao stepDao = new RecipeStepDao();&#xD;
     &#xD;
     List&lt;RecipeIngredientDto> ingreList = recipeIngredientDao.detailView(recipe_id); &#xD;
     RecipeDto racipe_dto = racipe_dao.detailView(recipe_id);&#xD;
&#xD;
     List&lt;RecipeStepDto> stepList = stepDao.detailView(recipe_id);&#xD;
     &#xD;
     racipe_dao.close();&#xD;
     recipeIngredientDao.close();&#xD;
		stepDao.close();&#xD;
     &#xD;
     System.out.println(racipe_dto);&#xD;
     &#xD;
     req.setAttribute(&quot;recipeDto&quot;, racipe_dto);&#xD;
     req.setAttribute(&quot;ingreList&quot;, ingreList);&#xD;
     req.setAttribute(&quot;stepList&quot;, stepList);&#xD;
     req.getRequestDispatcher(&quot;/RecipeProject/RecipeEdit.jsp&quot;).forward(req, resp);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDYOUuT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCePYOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDYOU-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDYOVOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>System.out.println(&quot;----------------수정 두포스트 진입---이전에 받은 id---------&quot;);&#xD;
		    	System.out.println(recipe_id);&#xD;
		    	HttpSession session = req.getSession();&#xD;
				SessionDto user = (SessionDto) session.getAttribute(&quot;user&quot;);&#xD;
				String user_idx = user.getUser_idx();&#xD;
		//		String user_idx = req.getParameter(&quot;user_idx&quot;);&#xD;
		//		String user_idx = (String) session.getAttribute(&quot;user_idx&quot;);&#xD;
				String recipe_name = req.getParameter(&quot;recipe_name&quot;);&#xD;
				String recipe_desc = req.getParameter(&quot;recipe_desc&quot;);&#xD;
				String recipe_amount_portion = req.getParameter(&quot;recipe_amount&quot;);&#xD;
				String recipe_cooking_time = req.getParameter(&quot;recipe_cooking_time&quot;);&#xD;
				String recipe_difficulty = req.getParameter(&quot;recipe_difficulty&quot;);&#xD;
				RecipeDto recipeDto = new RecipeDto();&#xD;
				recipeDto.setRecipe_id(recipe_id);&#xD;
				recipeDto.setUser_idx(user_idx);&#xD;
				recipeDto.setRecipe_name(recipe_name);&#xD;
				recipeDto.setRecipe_desc(recipe_desc);&#xD;
				recipeDto.setRecipe_people(recipe_amount_portion);&#xD;
				recipeDto.setRecipe_time(recipe_cooking_time);&#xD;
				recipeDto.setRecipe_difficulty(recipe_difficulty);&#xD;
				System.out.println(recipeDto);&#xD;
				&#xD;
				String fileName = req.getPart(&quot;mainPhotoUpload&quot;).getSubmittedFileName();&#xD;
				if(fileName.trim().length()==0||req.getPart(&quot;mainPhotoUpload&quot;) == null) {&#xD;
					Alert.alertBack(resp, &quot;메인요리파일 입력 필요&quot;);&#xD;
				}&#xD;
				String mainext = fileName.substring(fileName.lastIndexOf(&quot;.&quot;));&#xD;
				//파일 이름 같은계정 같은제목 같은 파일이름을 올릴시 비교할 수 잇는 예외 추가 필요&#xD;
				String mainFileName = user_idx + &quot;_&quot; + recipe_name + &quot;_mainPhoto&quot; + mainext;&#xD;
				String path = req.getServletContext().getRealPath(&quot;/Storage&quot;);&#xD;
				System.out.println(path);&#xD;
				&#xD;
				//관련파일삭제&#xD;
				RecipeDao recipeDao = new RecipeDao();&#xD;
				String oldFileName = recipeDao.detailView(recipe_id).getRecipe_id();&#xD;
				File oldFile = new File(path + &quot;\\&quot; + oldFileName);&#xD;
				if (oldFile.exists()) {&#xD;
				    if (!oldFile.delete()) {&#xD;
				        System.out.println(&quot;기존파일 삭제 실패&quot;);&#xD;
				    }&#xD;
				}&#xD;
				&#xD;
				//파일생성&#xD;
				InputStream is = req.getPart(&quot;mainPhotoUpload&quot;).getInputStream();&#xD;
				FileOutputStream os = new FileOutputStream(path + &quot;\\&quot; + mainFileName);&#xD;
				byte[] buffer = new byte[1024];&#xD;
				while (is.read(buffer) > 0) {&#xD;
					os.write(buffer);&#xD;
				}&#xD;
				is.close();&#xD;
				os.close();&#xD;
				&#xD;
				System.out.println(&quot;파일생성완료&quot;);&#xD;
				//db입력&#xD;
				recipeDto.setRecipe_image_url(mainFileName);&#xD;
				&#xD;
				&#xD;
				&#xD;
				RecipeIngredientDto recipeIngredientDto = new RecipeIngredientDto();&#xD;
		//		// DB 입력후 recipe_id 받아오기 위해 쓰레드 sleep 처리&#xD;
		//				try {&#xD;
		//					Thread.sleep(500);&#xD;
		//				} catch (Exception e) {&#xD;
		//					System.out.println(&quot;Thread error&quot;);&#xD;
		//				}&#xD;
		//		&#xD;
				&#xD;
				//요리과정 비어있는지 확인&#xD;
				java.util.Collection&lt;javax.servlet.http.Part> parts = req.getParts();&#xD;
				boolean hasFile = false;&#xD;
				if (parts != null &amp;&amp; !parts.isEmpty()) {&#xD;
//					System.out.println(&quot;파일 비어있는지 확인용 시작------------------------&quot;);&#xD;
				    for (javax.servlet.http.Part part : parts) {&#xD;
				        if (part.getName().equals(&quot;fileUpload&quot;) &amp;&amp; part.getSize() > 0) {&#xD;
				        	System.out.println(part.getName().equals(&quot;fileUpload&quot;));&#xD;
				            hasFile = true;&#xD;
				            break;&#xD;
				        }&#xD;
				    }&#xD;
//				    System.out.println(&quot;파일 비어있는지 확인 끝------------------------&quot;);&#xD;
				}&#xD;
				&#xD;
				if (!hasFile) {&#xD;
					recipeDao.close();&#xD;
				    Alert.alertBack(resp, &quot;요리 과정 사진을 입력하셔야 합니다.&quot;);&#xD;
				    System.out.println(&quot;요리과정 비어있음 체크완료&quot;);&#xD;
				    return;&#xD;
				}&#xD;
				&#xD;
				&#xD;
				recipeDao.updateRecipe(recipeDto);&#xD;
				recipeDao.close();&#xD;
				&#xD;
				//재료부분&#xD;
				RecipeIngredientDao recipeIngredientDao = new RecipeIngredientDao();&#xD;
				//재료부분 삭제&#xD;
				recipeIngredientDao.deleteIngredient(recipe_id);&#xD;
				String[] recipe_ingre_name = req.getParameterValues(&quot;ingredient_name[]&quot;);&#xD;
				String[] ingredient_amount = req.getParameterValues(&quot;ingredient_amount[]&quot;);&#xD;
				for (int i = 0; i &lt; recipe_ingre_name.length; i++) {&#xD;
					if (!recipe_ingre_name[i].equals(&quot;&quot;)) {&#xD;
						recipeIngredientDto.setRecipe_id(recipe_id);&#xD;
						recipeIngredientDto.setIngredient_amount(ingredient_amount[i]);&#xD;
						recipeIngredientDto.setIngredient_name(recipe_ingre_name[i]);&#xD;
						recipeIngredientDao.insertIngredient(recipeIngredientDto);&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				recipeIngredientDao.close();&#xD;
				System.out.println(&quot;---------------------------재료 끝---------------------------------&quot;);&#xD;
				&#xD;
				//요리과정부분&#xD;
				RecipeStepDto stepDto = new RecipeStepDto();&#xD;
				RecipeStepDao stepDao = new RecipeStepDao();&#xD;
				&#xD;
				//요리과정 사진 먼저 삭제&#xD;
				for(RecipeStepDto dto:stepDao.detailView(recipe_id)) {&#xD;
					String oldFileName2 = dto.getStep_image_url();&#xD;
					File oldFile2 = new File(path + &quot;\\&quot; + oldFileName);&#xD;
					if (oldFile2.exists()) {&#xD;
					    if (!oldFile2.delete()) {&#xD;
					        System.out.println(&quot;조리방법의 기존파일 삭제 실패&quot;);&#xD;
					    }&#xD;
					}&#xD;
				}&#xD;
				//요리과정 내용 삭제&#xD;
				stepDao.deleteSteps(recipe_id);&#xD;
				&#xD;
				System.out.println(&quot;------------ 요리과정 삭제부분완 ---------------&quot;);&#xD;
				String[] stepDesc = req.getParameterValues(&quot;step_text[]&quot;);&#xD;
				for(String s :stepDesc) {&#xD;
					System.out.println(s);					&#xD;
				}&#xD;
				&#xD;
				int imageIndex = 1;&#xD;
				int stepIndex = 0;&#xD;
				System.out.println(hasFile);&#xD;
				if (!hasFile) {&#xD;
				    Alert.alertBack(resp, &quot;요리 과정 사진을 입력하셔야 합니다.&quot;);&#xD;
				    System.out.println(&quot;안내메시지부분 지남&quot;);&#xD;
				    stepDao.close();&#xD;
				    return;&#xD;
				}else {&#xD;
					System.out.println(&quot;과정부분 넣기 진입&quot;);&#xD;
					for (javax.servlet.http.Part file : parts) {&#xD;
//						System.out.println(file.getName());&#xD;
						if (!file.getName().equals(&quot;fileUpload&quot;)) {&#xD;
							continue;&#xD;
						}else {&#xD;
							System.out.println(&quot;파일 처리 반복부분&quot;);&#xD;
							System.out.println(file);&#xD;
							String originName = file.getSubmittedFileName();&#xD;
							String ext = originName.substring(originName.lastIndexOf(&quot;.&quot;));&#xD;
							String newFileName = recipe_id + &quot;_&quot; + imageIndex + ext;&#xD;
							&#xD;
							&#xD;
							&#xD;
							InputStream fis = file.getInputStream();&#xD;
							String realPath = req.getServletContext().getRealPath(&quot;/Storage&quot;);&#xD;
							String filePath = realPath + File.separator + newFileName;&#xD;
							FileOutputStream fos = new FileOutputStream(filePath);&#xD;
							stepDto.setRecipe_id(recipe_id);&#xD;
							stepDto.setStep_desc(stepDesc[stepIndex]);&#xD;
							stepDto.setStep_image_url(newFileName);&#xD;
							stepDao.insertSteps(stepDto);&#xD;
							stepIndex++;&#xD;
							imageIndex++;&#xD;
							byte[] buf = new byte[1024];&#xD;
							int size = 0;&#xD;
							while ((size = fis.read(buf)) != -1) {&#xD;
								fos.write(buf, 0, size);&#xD;
							}&#xD;
							fis.close();&#xD;
							fos.close();					&#xD;
						}&#xD;
					}&#xD;
					resp.sendRedirect(&quot;../project/recipeview.do?recipe_id=&quot;+recipe_id);&#xD;
					&#xD;
				}&#xD;
				stepDao.close();&#xD;
				&#xD;
 	&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCdoUOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDXnSeT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCdoUeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCdoUuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCePYOT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDYOUuT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCePYeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCePYuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3o4YOT6Ee22rp5Kgxfxyw" name="RecipeListController">
          <generalization xmi:id="_dCgEkOT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDYOVeT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCfdgOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDYOVuT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDYOV-T6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>RecipeCategoryKindDao rckDao= new RecipeCategoryKindDao();&#xD;
		List&lt;RecipeCategoryKindDto> cate1 = new ArrayList&lt;>();&#xD;
		List&lt;RecipeCategoryKindDto> cate2 = new ArrayList&lt;>();&#xD;
		cate1 = rckDao.cateList(&quot;방법별&quot;);&#xD;
		cate2 = rckDao.cateList(&quot;재료별&quot;);&#xD;
		rckDao.close();&#xD;
		int currentPage;&#xD;
		RecipeDao dao = new RecipeDao();&#xD;
		List&lt;RecipeDto> list;&#xD;
		int totalCount;&#xD;
		int pageSize = 10;&#xD;
		String page=request.getParameter(&quot;page&quot;);&#xD;
		if(page==null || page.trim().length()==0) currentPage=1;&#xD;
		else currentPage = Integer.parseInt(page);&#xD;
		&#xD;
		String cat1 = request.getParameter(&quot;cate1&quot;);&#xD;
		String cat2 = request.getParameter(&quot;cate2&quot;);&#xD;
		System.out.println(cat1);&#xD;
		System.out.println(cat2);&#xD;
		Map&lt;String, Object> map = new HashMap&lt;>();&#xD;
		map.put(&quot;cat1&quot;, cat1);&#xD;
		map.put(&quot;cat2&quot;, cat2);&#xD;
		/*&#xD;
		 * if(cat1!=null &amp;&amp; cat2== null) { map.put(&quot;cat1&quot;,cat1); }else if(cat1== null &amp;&amp;&#xD;
		 * cat2 != null) { map.put(&quot;cat2&quot;,cat2); }else if(cat1!=null&amp;&amp; cat2!=null) {&#xD;
		 * map.put(&quot;cat1&quot;,cat1); map.put(&quot;cat2&quot;,cat2); }&#xD;
		 */&#xD;
		// 총 게시글 수를 구합니다.&#xD;
		totalCount= dao.getCount(map);&#xD;
		&#xD;
&#xD;
		// 현재 페이지 정보를 바탕으로 페이징 정보를 계산합니다.&#xD;
		PageDto pageDto = new PageDto(currentPage, totalCount, pageSize, cat1, cat2);&#xD;
		&#xD;
		// 해당 페이지에 해당하는 게시글 리스트를 DAO를 통해 조회합니다.&#xD;
		list = dao.getList(pageDto);&#xD;
		// 검색어와 검색 필드, 페이징 정보를 Attribute로 설정하고 JSP로 forward합니다.&#xD;
		request.setAttribute(&quot;cate1&quot;, cate1);&#xD;
		request.setAttribute(&quot;cate2&quot;, cate2);&#xD;
		request.setAttribute(&quot;list&quot;, list);&#xD;
		request.setAttribute(&quot;page&quot;, pageDto);&#xD;
		dao.close();&#xD;
		request.getRequestDispatcher(&quot;../RecipeProject/RecipeList.jsp&quot;).forward(request, response);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCfdgOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDYOVeT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCfdgeT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCfdguT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3r7sOT6Ee22rp5Kgxfxyw" name="RecipeViewController">
          <generalization xmi:id="_dCgrouT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDYOWOT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCgEkeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDYOWeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDYOWuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
		RecipeDao recipeDao = new RecipeDao();&#xD;
		RecipeIngredientDao recipeIngredientDao = new RecipeIngredientDao();&#xD;
		RecipeStepDao stepDao = new RecipeStepDao();&#xD;
		RecipeReviewDao ReviewDao = new RecipeReviewDao();&#xD;
		RecipeCommentDao commentDao = new RecipeCommentDao();&#xD;
		ReviewImgDao ReviewImageDao = new ReviewImgDao();&#xD;
		recipeDao.updateVisitCount(recipe_id);&#xD;
		RecipeDto recipeDto = recipeDao.detailView(recipe_id);&#xD;
		List&lt;RecipeIngredientDto> ingreList = recipeIngredientDao.detailView(recipe_id); &#xD;
		List&lt;RecipeStepDto> stepList = stepDao.detailView(recipe_id);&#xD;
		List&lt;RecipeReviewDto> ReviewList = ReviewDao.detailView(recipe_id);&#xD;
		int ReviewCount = ReviewDao.getreviewCount(recipe_id);&#xD;
		List&lt;RecipeCommentDto> commentList = commentDao.detailView(recipe_id);&#xD;
		int commentCount = commentDao.getCommentCount(recipe_id);&#xD;
		&#xD;
		List&lt;ReviewImgDto> reviewImgList = new ArrayList&lt;>(); &#xD;
		for (RecipeReviewDto review : ReviewList) {&#xD;
		    List&lt;ReviewImgDto> images = ReviewImageDao.getImgList(recipe_id, review.getReview_id());&#xD;
		    reviewImgList.addAll(images); &#xD;
		}&#xD;
		&#xD;
		req.setAttribute(&quot;recipeDto&quot;, recipeDto);&#xD;
		req.setAttribute(&quot;ingreList&quot;, ingreList);&#xD;
		req.setAttribute(&quot;stepList&quot;, stepList);&#xD;
		req.setAttribute(&quot;ReviewList&quot;, ReviewList);&#xD;
		req.setAttribute(&quot;ReviewCount&quot;, ReviewCount);&#xD;
		req.setAttribute(&quot;commentList&quot;, commentList);&#xD;
		req.setAttribute(&quot;commentCount&quot;, commentCount);&#xD;
		req.setAttribute(&quot;reviewImgList&quot;, reviewImgList);&#xD;
		recipeDao.close();&#xD;
		recipeIngredientDao.close();&#xD;
		stepDao.close();&#xD;
		ReviewDao.close();&#xD;
		commentDao.close();&#xD;
		ReviewImageDao.close();&#xD;
		req.getRequestDispatcher(&quot;../RecipeProject/RecipeView.jsp&quot;).forward(req, resp);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCgEkeT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDYOWOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCgEkuT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCgEk-T6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3u_AOT6Ee22rp5Kgxfxyw" name="RecipeWriteController">
          <generalization xmi:id="_dCjH4uT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDY1YOT6Ee22rp5Kgxfxyw" name="doGet" specification="_dChSsOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDY1YeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDY1YuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>RecipeCategoryKindDao rckDao= new RecipeCategoryKindDao();&#xD;
		Map&lt;String, Object> map = new HashMap&lt;>();&#xD;
		List&lt;RecipeCategoryKindDto> cate1 = new ArrayList&lt;>();&#xD;
		List&lt;RecipeCategoryKindDto> cate2 = new ArrayList&lt;>();&#xD;
		cate1 = rckDao.cateList(&quot;방법별&quot;);&#xD;
		cate2 = rckDao.cateList(&quot;재료별&quot;);&#xD;
		rckDao.close();&#xD;
		map.put(&quot;cate1&quot;, cate1);&#xD;
		map.put(&quot;cate2&quot;, cate2);&#xD;
		&#xD;
		req.setAttribute(&quot;map&quot;, map);&#xD;
		req.getRequestDispatcher(&quot;/RecipeProject/RecipeWrite.jsp&quot;).forward(req, resp);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDY1Y-T6Ee22rp5Kgxfxyw" name="doPost" specification="_dCig0OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDY1ZOT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDY1ZeT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>HttpSession session = req.getSession();&#xD;
		SessionDto user = (SessionDto) session.getAttribute(&quot;user&quot;);&#xD;
		String user_idx = user.getUser_idx();&#xD;
//		String user_idx = req.getParameter(&quot;user_idx&quot;);&#xD;
//		String user_idx = (String) session.getAttribute(&quot;user_idx&quot;);&#xD;
		String recipe_name = req.getParameter(&quot;recipe_name&quot;);&#xD;
		String recipe_desc = req.getParameter(&quot;recipe_desc&quot;);&#xD;
		String recipe_amount_portion = req.getParameter(&quot;recipe_amount&quot;);&#xD;
		String recipe_cooking_time = req.getParameter(&quot;recipe_cooking_time&quot;);&#xD;
		String recipe_difficulty = req.getParameter(&quot;recipe_difficulty&quot;);&#xD;
		RecipeDto recipeDto = new RecipeDto();&#xD;
		recipeDto.setUser_idx(user_idx);&#xD;
		recipeDto.setRecipe_name(recipe_name);&#xD;
		recipeDto.setRecipe_desc(recipe_desc);&#xD;
		recipeDto.setRecipe_people(recipe_amount_portion);&#xD;
		recipeDto.setRecipe_time(recipe_cooking_time);&#xD;
		recipeDto.setRecipe_difficulty(recipe_difficulty);&#xD;
		&#xD;
		&#xD;
		//파일입력부분&#xD;
		String fileName = req.getPart(&quot;mainPhotoUpload&quot;).getSubmittedFileName();&#xD;
		if(fileName.trim().length()==0||req.getPart(&quot;mainPhotoUpload&quot;) == null) {&#xD;
			Alert.alertBack(resp, &quot;파일 입력 필요&quot;);&#xD;
		}&#xD;
		String mainext = fileName.substring(fileName.lastIndexOf(&quot;.&quot;));&#xD;
		//파일 이름 같은계정 같은제목 같은 파일이름을 올릴시 비교할 수 잇는 예외 추가 필요&#xD;
		String mainFileName = user_idx + &quot;_&quot; + recipe_name + &quot;_mainPhoto&quot; + mainext;&#xD;
		String path = req.getServletContext().getRealPath(&quot;/Storage&quot;);&#xD;
		System.out.println(path);&#xD;
//		mainFileName = path+&quot;\\&quot; + mainFileName;&#xD;
		InputStream is = req.getPart(&quot;mainPhotoUpload&quot;).getInputStream();&#xD;
		FileOutputStream os = new FileOutputStream(path + &quot;\\&quot; + mainFileName);&#xD;
		&#xD;
		byte[] buffer = new byte[1024];&#xD;
		while (is.read(buffer) > 0) {&#xD;
			os.write(buffer);&#xD;
		}&#xD;
		is.close();&#xD;
		os.close();&#xD;
		&#xD;
		&#xD;
		String cate1 = req.getParameter(&quot;cate1&quot;);&#xD;
		String cate2 = req.getParameter(&quot;cate2&quot;);&#xD;
		recipeDto.setCate1(cate1);&#xD;
		recipeDto.setCate2(cate2);&#xD;
		&#xD;
		&#xD;
		System.out.println(&quot;파일생성완료&quot;);&#xD;
		//db입력&#xD;
		recipeDto.setRecipe_image_url(mainFileName);&#xD;
		RecipeDao recipeDao = new RecipeDao();&#xD;
		&#xD;
		&#xD;
		&#xD;
//		recipeDao.insertRecipe(recipeDto);&#xD;
		&#xD;
		RecipeIngredientDto recipeIngredientDto = new RecipeIngredientDto();&#xD;
//		IngredientDao ingredientDao = new IngredientDao();  머하는부분인지 모르겠음&#xD;
//		ingredientDao.close();&#xD;
		System.out.println(&quot;인서트 후 &quot;);&#xD;
&#xD;
		// DB 입력후 recipe_id 받아오기 위해 쓰레드 sleep 처리&#xD;
		try {&#xD;
			Thread.sleep(1500);&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;Thread error&quot;);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//요리과정 비어있는지 확인&#xD;
		java.util.Collection&lt;javax.servlet.http.Part> parts = req.getParts();&#xD;
		boolean hasFile = false;&#xD;
		if (parts != null &amp;&amp; !parts.isEmpty()) {&#xD;
//			System.out.println(&quot;파일 비어있는지 확인용 시작------------------------&quot;);&#xD;
		    for (javax.servlet.http.Part part : parts) {&#xD;
		        if (part.getName().equals(&quot;fileUpload&quot;) &amp;&amp; part.getSize() > 0) {&#xD;
		        	System.out.println(part.getName().equals(&quot;fileUpload&quot;));&#xD;
		            hasFile = true;&#xD;
		            break;&#xD;
		        }&#xD;
		    }&#xD;
//		    System.out.println(&quot;파일 비어있는지 확인 끝------------------------&quot;);&#xD;
		}&#xD;
		&#xD;
		if (!hasFile) {&#xD;
			recipeDao.close();&#xD;
		    Alert.alertBack(resp, &quot;요리 과정 사진을 입력하셔야 합니다.&quot;);&#xD;
		    System.out.println(&quot;요리과정 비어있음 체크완료&quot;);&#xD;
		    return;&#xD;
		}&#xD;
&#xD;
		//재료부분&#xD;
		recipeDao.insertRecipe(recipeDto);&#xD;
		String recipe_id = recipeDao.getLastRecipeId();&#xD;
		recipeDao.close();&#xD;
		&#xD;
		RecipeIngredientDao recipeIngredientDao = new RecipeIngredientDao();&#xD;
		String[] recipe_ingre_name = req.getParameterValues(&quot;ingredient_name[]&quot;);&#xD;
		String[] ingredient_amount = req.getParameterValues(&quot;ingredient_amount[]&quot;);&#xD;
		for (int i = 0; i &lt; recipe_ingre_name.length; i++) {&#xD;
			if (!recipe_ingre_name[i].equals(&quot;&quot;)) {&#xD;
				recipeIngredientDto.setRecipe_id(recipe_id);&#xD;
				recipeIngredientDto.setIngredient_amount(ingredient_amount[i]);&#xD;
				recipeIngredientDto.setIngredient_name(recipe_ingre_name[i]);&#xD;
				recipeIngredientDao.insertIngredient(recipeIngredientDto);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		recipeIngredientDao.close();&#xD;
		System.out.println(&quot;---------------------------재료 끝---------------------------------&quot;);&#xD;
		&#xD;
		//요리과정부분&#xD;
		RecipeStepDto stepDto = new RecipeStepDto();&#xD;
		RecipeStepDao stepDao = new RecipeStepDao();&#xD;
		&#xD;
		String[] stepDesc = req.getParameterValues(&quot;step_text[]&quot;);&#xD;
		for(String s :stepDesc) {&#xD;
			System.out.println(s);&#xD;
		}&#xD;
		&#xD;
		System.out.println(&quot;------------요리과정 파라미터 출력완-----------------&quot;);&#xD;
		&#xD;
		int imageIndex = 1;&#xD;
		int stepIndex = 0;&#xD;
//		java.util.Collection&lt;javax.servlet.http.Part> parts = req.getParts();&#xD;
//		boolean hasFile = false;&#xD;
//		if (parts != null &amp;&amp; !parts.isEmpty()) {&#xD;
////			System.out.println(&quot;파일 비어있는지 확인용 시작------------------------&quot;);&#xD;
//		    for (javax.servlet.http.Part part : parts) {&#xD;
//		        if (part.getName().equals(&quot;fileUpload&quot;) &amp;&amp; part.getSize() > 0) {&#xD;
//		        	System.out.println(part.getName().equals(&quot;fileUpload&quot;));&#xD;
//		            hasFile = true;&#xD;
//		            break;&#xD;
//		        }&#xD;
//		    }&#xD;
////		    System.out.println(&quot;파일 비어있는지 확인 끝------------------------&quot;);&#xD;
//		    &#xD;
//		}&#xD;
		System.out.println(hasFile);&#xD;
		&#xD;
		&#xD;
		&#xD;
//		if (parts == null || parts.isEmpty()) {&#xD;
		&#xD;
		if (!hasFile) {&#xD;
		    Alert.alertBack(resp, &quot;요리 과정 사진을 입력하셔야 합니다.&quot;);&#xD;
		    System.out.println(&quot;안내메시지부분 지남&quot;);&#xD;
		    stepDao.close();&#xD;
		} else {&#xD;
			System.out.println(&quot;과정부분 넣기 진입&quot;);&#xD;
			for (javax.servlet.http.Part file : parts) {&#xD;
//				System.out.println(file.getName());&#xD;
				if (!file.getName().equals(&quot;fileUpload&quot;)) {&#xD;
					continue;&#xD;
				}else {&#xD;
//					System.out.println(&quot;파일 처리 반복부분&quot;);&#xD;
//					System.out.println(file);&#xD;
					String originName = file.getSubmittedFileName();&#xD;
					String ext = originName.substring(originName.lastIndexOf(&quot;.&quot;));&#xD;
					String newFileName = recipe_id + &quot;_&quot; + imageIndex + ext;&#xD;
&#xD;
					&#xD;
					InputStream fis = file.getInputStream();&#xD;
					String realPath = req.getServletContext().getRealPath(&quot;/Storage&quot;);&#xD;
					String filePath = realPath + File.separator + newFileName;&#xD;
					FileOutputStream fos = new FileOutputStream(filePath);&#xD;
					stepDto.setRecipe_id(recipe_id);&#xD;
					stepDto.setStep_desc(stepDesc[stepIndex]);&#xD;
					stepDto.setStep_image_url(newFileName);&#xD;
					stepDao.insertSteps(stepDto);&#xD;
					stepIndex++;&#xD;
					imageIndex++;&#xD;
					byte[] buf = new byte[1024];&#xD;
					int size = 0;&#xD;
					while ((size = fis.read(buf)) != -1) {&#xD;
						fos.write(buf, 0, size);&#xD;
					}&#xD;
					fis.close();&#xD;
					fos.close();					&#xD;
				}&#xD;
			}&#xD;
			resp.sendRedirect(&quot;../project/recipeList.do&quot;);&#xD;
		}&#xD;
		stepDao.close();&#xD;
		&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dChSsOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDY1YOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dChSseT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dChSsuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCig0OT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDY1Y-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCig0eT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCig0uT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c30ekOT6Ee22rp5Kgxfxyw" name="ReviewDeleteController">
          <generalization xmi:id="_dCkWAuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDY1ZuT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCju8OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDY1Z-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDY1aOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String review_id = req.getParameter(&quot;review_id&quot;);&#xD;
		String recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
		 RecipeReviewDao dao = new RecipeReviewDao();&#xD;
		 int res = dao.deleteReview(review_id);&#xD;
&#xD;
		 dao.close();&#xD;
		 resp.sendRedirect(&quot;../project/recipeview.do?recipe_id=&quot; + recipe_id);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCju8OT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDY1ZuT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCju8eT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCju8uT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c3260OT6Ee22rp5Kgxfxyw" name="ReviewWriteController">
          <generalization xmi:id="_dCmLMuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDZccOT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCk9EOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDZcceT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDZccuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String recipe_id=req.getParameter(&quot;recipe_id&quot;);&#xD;
   req.setAttribute(&quot;recipe_id&quot;, recipe_id);&#xD;
   req.getRequestDispatcher(&quot;/RecipeProject/ReviewWrite.jsp&quot;).forward(req, resp);&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDZcc-T6Ee22rp5Kgxfxyw" name="doPost" specification="_dClkIuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDZcdOT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDZcdeT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String recipe_id = req.getParameter(&quot;recipe_id&quot;);&#xD;
   System.out.println(recipe_id);&#xD;
   String user_idx = req.getParameter(&quot;user_idx&quot;);&#xD;
   String review_content = req.getParameter(&quot;review_content&quot;);&#xD;
   int review_rating = Integer.parseInt(req.getParameter(&quot;rate&quot;));&#xD;
   RecipeReviewDto dto = new RecipeReviewDto();&#xD;
   RecipeReviewDao dao = new RecipeReviewDao();&#xD;
   dto.setRecipe_id(recipe_id);&#xD;
   dto.setUser_idx(user_idx);&#xD;
   dto.setReview_content(review_content);&#xD;
   dto.setReview_rating(review_rating);&#xD;
   dao.insertReview(dto);&#xD;
   &#xD;
   String review_id = dao.getLastReviewId();&#xD;
   dao.close();&#xD;
   &#xD;
   ReviewImgDao idao = new ReviewImgDao();&#xD;
   java.util.Collection&lt;javax.servlet.http.Part> parts = req.getParts();&#xD;
   int imageIndex=1;&#xD;
   for (javax.servlet.http.Part file : parts) {&#xD;
	    	 if (!file.getName().equals(&quot;fileUpload&quot;)) {&#xD;
	    	        continue;&#xD;
	    	    }&#xD;
	         if (file.getSize() == 0) {&#xD;
	             continue; // 파일이 업로드되지 않은 경우 루프를 건너뜁니다.&#xD;
	         }&#xD;
         ReviewImgDto idto = new ReviewImgDto();&#xD;
         String originName = file.getSubmittedFileName();&#xD;
         String ext = originName.substring(originName.lastIndexOf(&quot;.&quot;));&#xD;
         String newFileName = recipe_id+&quot;_&quot;+imageIndex+&quot;rvImg&quot;+ext;&#xD;
         InputStream  fis = file.getInputStream();&#xD;
         String realPath = req.getServletContext().getRealPath(&quot;/Storage&quot;);&#xD;
         System.out.println(realPath);&#xD;
         String filePath = realPath + File.separator + newFileName;&#xD;
         FileOutputStream fos = new FileOutputStream(filePath);&#xD;
         idto.setReview_id(review_id);&#xD;
         idto.setImg_image_url(newFileName);&#xD;
         idao.insertReviewImage(idto);&#xD;
         imageIndex++;&#xD;
      byte[] buf = new byte[1024];&#xD;
      int size = 0;&#xD;
      while ((size = fis.read(buf)) != -1) {&#xD;
         fos.write(buf, 0, size);&#xD;
      }&#xD;
      fis.close();&#xD;
      fos.close();&#xD;
   }&#xD;
   idao.close();&#xD;
   resp.sendRedirect(&quot;../project/recipeview.do?recipe_id=&quot;+recipe_id);&#xD;
   &#xD;
</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCk9EOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDZccOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCk9EeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCk9EuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dClkIuT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDZcc-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dClkI-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dClkJOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_c0bzYOT6Ee22rp5Kgxfxyw" name="utility">
        <packagedElement xmi:type="uml:Class" xmi:id="_c4wSsOT6Ee22rp5Kgxfxyw" name="Alert">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgxNOT6Ee22rp5Kgxfxyw" name="alertLocation" specification="_dCrDsOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDgxNeT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgxNuT6Ee22rp5Kgxfxyw" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDgxN-T6Ee22rp5Kgxfxyw" name="out" type="_dB61wOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String script = &quot;&lt;script>\r\n&quot;&#xD;
				+ &quot;		alert('&quot;+msg+&quot;');\r\n&quot;&#xD;
				+ &quot;		location.href='&quot;+url+&quot;';\r\n&quot;&#xD;
				+ &quot;	&lt;/script>\r\n&quot;;&#xD;
		try {&#xD;
			out.println(script);&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDgxOOT6Ee22rp5Kgxfxyw" name="alertBack" specification="_dCrqw-T6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDhYQOT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDhYQeT6Ee22rp5Kgxfxyw" name="out" type="_dB61wOT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>String script = &quot;&lt;script>\r\n&quot;&#xD;
				+ &quot;		alert('&quot;+msg+&quot;');\r\n&quot;&#xD;
				+ &quot;		history.back();\r\n&quot;&#xD;
				+ &quot;	&lt;/script>&quot;;&#xD;
		try {&#xD;
			out.println(script);&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDhYQuT6Ee22rp5Kgxfxyw" name="alertLocation" specification="_dCsR0eT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDhYQ-T6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDhYROT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dDhYReT6Ee22rp5Kgxfxyw" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			resp.setContentType(&quot;text/html;charset=UTF-8&quot;);&#xD;
			PrintWriter writer=resp.getWriter();&#xD;
			String script =&quot;&lt;script>&quot;&#xD;
				+ &quot;	alert('&quot;+msg+&quot;');&quot;&#xD;
				+ &quot;	location.href='&quot;+url+&quot;';&quot;&#xD;
				+ &quot; &lt;/script>&quot;;&#xD;
			writer.print(script);&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDhYRuT6Ee22rp5Kgxfxyw" name="alertBack" specification="_dCs44OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDhYR-T6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dDhYSOT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
         resp.setContentType(&quot;text/html;charset=UTF-8&quot;);&#xD;
         PrintWriter writer = resp.getWriter();&#xD;
         String script = &quot;&lt;script>&quot;&#xD;
                       + &quot;    alert('&quot; + msg + &quot;');&quot;&#xD;
                       + &quot;    history.back();&quot;&#xD;
                       + &quot;&lt;/script>&quot;;&#xD;
         writer.print(script);&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     	 e.printStackTrace(); // 예외를 출력하도록 변경&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dCrDsOT6Ee22rp5Kgxfxyw" name="alertLocation" isStatic="true" method="_dDgxNOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCrqwOT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dCrqweT6Ee22rp5Kgxfxyw" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dCrqwuT6Ee22rp5Kgxfxyw" name="out" type="_dB61wOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCrqw-T6Ee22rp5Kgxfxyw" name="alertBack" isStatic="true" method="_dDgxOOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCrqxOT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dCsR0OT6Ee22rp5Kgxfxyw" name="out" type="_dB61wOT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCsR0eT6Ee22rp5Kgxfxyw" name="alertLocation" isStatic="true" method="_dDhYQuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCsR0uT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCsR0-T6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dCsR1OT6Ee22rp5Kgxfxyw" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_dCs44OT6Ee22rp5Kgxfxyw" name="alertBack" isStatic="true" method="_dDhYRuT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCs44eT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
            <ownedParameter xmi:id="_dCs44uT6Ee22rp5Kgxfxyw" name="msg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_c5AKUOT6Ee22rp5Kgxfxyw" name="NaverSmtp">
          <ownedAttribute xmi:id="_dDJk0eT6Ee22rp5Kgxfxyw" name="serverInfo" visibility="private" isLeaf="true" type="_dB8D4OT6Ee22rp5Kgxfxyw" isReadOnly="true" association="_dD2vceT6Ee22rp5Kgxfxyw"/>
          <ownedAttribute xmi:id="_dDKL4eT6Ee22rp5Kgxfxyw" name="auth" visibility="private" isLeaf="true" type="_dB8q8eT6Ee22rp5Kgxfxyw" isReadOnly="true" association="_dD39kOT6Ee22rp5Kgxfxyw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDhYSeT6Ee22rp5Kgxfxyw" name="NaverSmtp" specification="_c5AxYOT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDhYSuT6Ee22rp5Kgxfxyw" type="_c5AKUOT6Ee22rp5Kgxfxyw" direction="return"/>
            <language>java</language>
            <body>//네이버의 SMTP 서버 접속 정보&#xD;
   serverInfo = new Properties();&#xD;
   serverInfo.put(&quot;mail.smtp.host&quot;, &quot;smtp.naver.com&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.port&quot;, &quot;465&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.starttls.enable&quot;, &quot;true&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.starttls.required&quot;, &quot;true&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.ssl.enable&quot;, &quot;true&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.ssl.trust&quot;, &quot;smtp.naver.com&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.ssl.protocols&quot;,&quot;TLSv1.2&quot;);&#xD;
   serverInfo.put(&quot;mail.smtp.socketFactory.class&quot;,&quot;javax.net.ssl.SSLSocketFactory&quot;);&#xD;
   //사용자 인증 정보&#xD;
   auth=new Authenticator() {&#xD;
      @Override&#xD;
      protected PasswordAuthentication getPasswordAuthentication() {&#xD;
         return new PasswordAuthentication(&quot;hgh0425&quot;, &quot;!gksrjs1372&quot;);&#xD;
      }&#xD;
   };&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDhYS-T6Ee22rp5Kgxfxyw" name="emailSending" specification="_dCtf8OT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dDhYTOT6Ee22rp5Kgxfxyw" name="mailInfo" type="_dBnTweT6Ee22rp5Kgxfxyw"/>
            <language>java</language>
            <body>//세션 생성&#xD;
   Session session=Session.getInstance(serverInfo,auth);&#xD;
   session.setDebug(true);&#xD;
   //메시지 작성&#xD;
   MimeMessage msg=new MimeMessage(session);&#xD;
   //>보낸사람&#xD;
   msg.setFrom(new InternetAddress(mailInfo.get(&quot;from&quot;)));&#xD;
   //>받는사람&#xD;
   msg.addRecipient(Message.RecipientType.TO, new InternetAddress(mailInfo.get(&quot;to&quot;)));&#xD;
   //>제목&#xD;
   msg.setSubject(mailInfo.get(&quot;subject&quot;));&#xD;
   //>내용&#xD;
   msg.setContent(mailInfo.get(&quot;content&quot;),mailInfo.get(&quot;format&quot;));&#xD;
   //전송&#xD;
   Transport.send(msg);&#xD;
   System.out.println(&quot;message sent&quot;);&#xD;
</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_c5AxYOT6Ee22rp5Kgxfxyw" name="NaverSmtp" method="_dDhYSeT6Ee22rp5Kgxfxyw">
            <eAnnotations xmi:id="_c5BYcOT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_c5BYceT6Ee22rp5Kgxfxyw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_c5BYcuT6Ee22rp5Kgxfxyw" type="_c5AKUOT6Ee22rp5Kgxfxyw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dCtf8OT6Ee22rp5Kgxfxyw" name="emailSending" method="_dDhYS-T6Ee22rp5Kgxfxyw" raisedException="_dB95EeT6Ee22rp5Kgxfxyw">
            <ownedParameter xmi:id="_dCtf8eT6Ee22rp5Kgxfxyw" name="mailInfo" type="_dBnTweT6Ee22rp5Kgxfxyw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_dD2vceT6Ee22rp5Kgxfxyw" name="" memberEnd="_dD2vcuT6Ee22rp5Kgxfxyw _dDJk0eT6Ee22rp5Kgxfxyw">
          <ownedEnd xmi:id="_dD2vcuT6Ee22rp5Kgxfxyw" name="" type="_c5AKUOT6Ee22rp5Kgxfxyw" association="_dD2vceT6Ee22rp5Kgxfxyw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_dD39kOT6Ee22rp5Kgxfxyw" name="" memberEnd="_dD39keT6Ee22rp5Kgxfxyw _dDKL4eT6Ee22rp5Kgxfxyw">
          <ownedEnd xmi:id="_dD39keT6Ee22rp5Kgxfxyw" name="" type="_c5AKUOT6Ee22rp5Kgxfxyw" association="_dD39kOT6Ee22rp5Kgxfxyw"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_c0SpcOT6Ee22rp5Kgxfxyw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_c0SpceT6Ee22rp5Kgxfxyw" name="google">
        <packagedElement xmi:type="uml:Package" xmi:id="_c0SpcuT6Ee22rp5Kgxfxyw" name="gson">
          <packagedElement xmi:type="uml:Class" xmi:id="_dBYqQOT6Ee22rp5Kgxfxyw" name="Gson"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dCDYoeT6Ee22rp5Kgxfxyw" name="JsonArray"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dCD_seT6Ee22rp5Kgxfxyw" name="JsonObject"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_c1-rgOT6Ee22rp5Kgxfxyw" name="user">
      <packagedElement xmi:type="uml:Class" xmi:id="_c5CmkOT6Ee22rp5Kgxfxyw" name="EmailChack">
        <generalization xmi:id="_dCv8MuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
        <ownedAttribute xmi:id="_dDKy8eT6Ee22rp5Kgxfxyw" name="key" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dDKy8uT6Ee22rp5Kgxfxyw" value="null"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDh_UOT6Ee22rp5Kgxfxyw" name="doGet" specification="_dCuuEOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDh_UeT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDh_UuT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>System.out.println(&quot;이메일 체크 두겟 진입&quot;);&#xD;
		System.out.println(request.getParameter(&quot;email&quot;));&#xD;
		// TODO Auto-generated method stub&#xD;
		Map&lt;String, String> emailInfo = new HashMap();&#xD;
		emailInfo.put(&quot;from&quot;, &quot;hgh0425@naver.com&quot;);  // 보내는 사람&#xD;
		emailInfo.put(&quot;to&quot;, request.getParameter(&quot;email&quot;));      // 받는 사람&#xD;
		emailInfo.put(&quot;subject&quot;, &quot;인증을 위한 메일&quot;);  // 제목&#xD;
&#xD;
		// 내용은 메일 포맷에 따라 다르게 처리&#xD;
		String content = &quot;랜덤문자&quot;;  // 내용&#xD;
		String format = &quot;text&quot;;    // 메일 포맷(text 혹은 html)&#xD;
		if (format.equals(&quot;text&quot;)) {&#xD;
		    // 텍스트 포맷일 때는 그대로 저장&#xD;
		    emailInfo.put(&quot;content&quot;, content);&#xD;
		    emailInfo.put(&quot;format&quot;, &quot;text/plain;charset=UTF-8&quot;);&#xD;
		}&#xD;
		&#xD;
		try {&#xD;
		    NaverSmtp smtpServer = new NaverSmtp();  // 메일 전송 클래스 생성&#xD;
		    smtpServer.emailSending(emailInfo);      // 전송&#xD;
		    System.out.println(&quot;이메일 전송 성공&quot;);&#xD;
		}&#xD;
		catch (Exception e) {&#xD;
			System.out.println(&quot;이메일 전송 실패&quot;);&#xD;
		    e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		key=content;&#xD;
		System.out.println(&quot;-----------------------이메일전송끝--------------구분용-                  ------&quot;);&#xD;
		&#xD;
		request.getRequestDispatcher(&quot;../Storage/Join.jsp&quot;).forward(request, response);&#xD;
		return;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDh_U-T6Ee22rp5Kgxfxyw" name="doPost" specification="_dCvVIeT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDh_VOT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDh_VeT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>String sendkey=&quot;메일인증안됨&quot;;&#xD;
		System.out.println(&quot;이메일체크 두포스트진입 보낸 문자:  &quot;+key);&#xD;
		System.out.println(&quot;입력한 문자: &quot;+request.getParameter(&quot;key&quot;));&#xD;
		if(key.equals(request.getParameter(&quot;key&quot;))) {&#xD;
			System.out.println(&quot;인증번호 동일&quot;);&#xD;
			sendkey=&quot;메일인증성공&quot;;&#xD;
		}&#xD;
		JsonObject jsonObject = new JsonObject();&#xD;
	    jsonObject.addProperty(&quot;keychack&quot;, sendkey);&#xD;
	     &#xD;
		// TODO Auto-generated method stub&#xD;
//		request.setAttribute(&quot;keychack&quot;, &quot;suck&quot;);&#xD;
		&#xD;
//		request.getRequestDispatcher(&quot;../Storage/Join.jsp&quot;).forward(request, response);&#xD;
		&#xD;
//		response.setContentType(&quot;text/plain&quot;);&#xD;
//		response.setCharacterEncoding(&quot;UTF-8&quot;);&#xD;
//		response.getWriter().write(&quot;전송할 데이터&quot;);&#xD;
		&#xD;
    &#xD;
//	        JsonArray jsonArray = new JsonArray();&#xD;
//        for (String s : list) {&#xD;
//          jsonArray.add(new JsonPrimitive(s));&#xD;
//          System.out.println(s);&#xD;
//        }&#xD;
//        jsonObject.add(&quot;suggestions&quot;, jsonArray);&#xD;
     &#xD;
     response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
     response.getWriter().write(jsonObject.toString());&#xD;
		&#xD;
//		request.setAttribute(&quot;result&quot;, &quot;sunggong&quot;);&#xD;
//		request.setAttribute(&quot;keychack&quot;, &quot;suck&quot;);&#xD;
//	    RequestDispatcher dispatcher = request.getRequestDispatcher(&quot;../Storage/Join.jsp&quot;);&#xD;
//	    dispatcher.forward(request, response);&#xD;
	    &#xD;
	    return;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dCuuEOT6Ee22rp5Kgxfxyw" name="doGet" visibility="protected" method="_dDh_UOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCuuEeT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dCuuEuT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dCvVIeT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDh_U-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCvVIuT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dCvVI-T6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_c5GQ8OT6Ee22rp5Kgxfxyw" name="FindPwController2">
        <generalization xmi:id="_dCxKUuT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDh_VuT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCwjQOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDh_V-T6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDh_WOT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>HttpSession session = req.getSession();&#xD;
		String from = &quot;gusehd1995@naver.com&quot;;&#xD;
		String username = &quot;gusehd1995@naver.com&quot;;&#xD;
		String pass = &quot;!1nicegood2!&quot;;&#xD;
		&#xD;
		Random rand = new Random();&#xD;
		int randCode = rand.nextInt(900000) + 100000;&#xD;
		String authCode = Integer.toString((int)randCode);&#xD;
		Properties serverInfo = new Properties();&#xD;
		serverInfo.put(&quot;mail.smtp.host&quot;, &quot;smtp.naver.com&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.port&quot;, &quot;456&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.starttls.enable&quot;, &quot;true&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.starttls.required&quot;, &quot;true&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.ssl.enable&quot;, &quot;true&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.ssl.trust&quot;, &quot;smtp.naver.com&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.ssl.protocols&quot;, &quot;TLSv1.2&quot;);&#xD;
		serverInfo.put(&quot;mail.smtp.socketFactory.class&quot;, &quot;javax.net.ssl.SSLSocketFactory&quot;);&#xD;
		&#xD;
		Session mailSession = Session.getInstance(serverInfo, new Authenticator() {&#xD;
			protected PasswordAuthentication getPasswordAuthentication() {&#xD;
				  return new PasswordAuthentication(username, pass);&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		&#xD;
		try {&#xD;
		    MimeMessage message = new MimeMessage(mailSession);&#xD;
		    message.setFrom(new InternetAddress(from));&#xD;
		    message.addRecipient(Message.RecipientType.TO, new InternetAddress(req.getParameter(&quot;email&quot;)));&#xD;
		    message.setSubject(&quot;이메일 인증 코드&quot;);&#xD;
		    message.setText(&quot;인증 코드는 &quot; + authCode + &quot; 입니다.&quot;);&#xD;
		    Transport.send(message);&#xD;
		    System.out.println(&quot;이메일이 성공적으로 전송되었습니다.&quot;);&#xD;
		  } catch (MessagingException mex) {&#xD;
		    mex.printStackTrace();&#xD;
		    System.out.println(&quot;이메일 전송에 실패했습니다.&quot;);&#xD;
		  }&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dCwjQOT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDh_VuT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCwjQeT6Ee22rp5Kgxfxyw" name="req" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dCwjQuT6Ee22rp5Kgxfxyw" name="resp" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_c5J7UOT6Ee22rp5Kgxfxyw" name="IdChack">
        <generalization xmi:id="_dCyYcOT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDh_WeT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCxxYOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDh_WuT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDh_W-T6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>String idchack = &quot;아이디중복여부확인메시지&quot;;&#xD;
		System.out.println(&quot;아이디체크 두포스트진입:  &quot;+request.getParameter(&quot;id&quot;));&#xD;
		UsersDaoGun dao = new UsersDaoGun();&#xD;
		&#xD;
		&#xD;
		JsonObject jsonObject = new JsonObject();&#xD;
		if(dao.idDuplicateCheck(request.getParameter(&quot;id&quot;))) {&#xD;
			System.out.println(&quot;아이디중복없음&quot;);&#xD;
			jsonObject.addProperty(&quot;idchack&quot;, &quot;아이디중복없음&quot;);&#xD;
		}else {&#xD;
			System.out.println(&quot;아이디중복&quot;);&#xD;
			jsonObject.addProperty(&quot;idchack&quot;, &quot;아이디중복&quot;);&#xD;
		}&#xD;
		dao.close();&#xD;
	    response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
     response.getWriter().write(jsonObject.toString());&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dCxxYOT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDh_WeT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCxxYeT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dCxxYuT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_c5M-oOT6Ee22rp5Kgxfxyw" name="IdPwChack">
        <generalization xmi:id="_dCy_hOT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDimYOT6Ee22rp5Kgxfxyw" name="doPost" specification="_dCyYceT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDimYeT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDimYuT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>UsersDaoGun dao = new UsersDaoGun();&#xD;
		String idpwchack = &quot;여부확인메시지&quot;;&#xD;
		if(request.getParameter(&quot;id&quot;).equals(&quot;아이디찾기&quot;)) {&#xD;
		&#xD;
			idpwchack=dao.idCheck(request.getParameter(&quot;name&quot;), request.getParameter(&quot;email&quot;));&#xD;
			System.out.println(idpwchack);&#xD;
&#xD;
		}else {&#xD;
			idpwchack=dao.pwCheck(request.getParameter(&quot;id&quot;), request.getParameter(&quot;name&quot;), request.getParameter(&quot;email&quot;));&#xD;
			System.out.println(&quot;아이디체크 두포스트진입:  &quot;+request.getParameter(&quot;id&quot;));&#xD;
			&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
		System.out.println(&quot;아이디체크 두포스트진입:  &quot;+request.getParameter(&quot;name&quot;));&#xD;
		System.out.println(&quot;아이디체크 두포스트진입:  &quot;+request.getParameter(&quot;email&quot;));&#xD;
	&#xD;
		&#xD;
		JsonObject jsonObject = new JsonObject();&#xD;
		jsonObject.addProperty(&quot;message&quot;, idpwchack);&#xD;
		&#xD;
		dao.close();&#xD;
	    response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
     response.getWriter().write(jsonObject.toString());&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dCyYceT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDimYOT6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCy_gOT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dCy_geT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_c5Oz0OT6Ee22rp5Kgxfxyw" name="NickChack">
        <generalization xmi:id="_dC0NpOT6Ee22rp5Kgxfxyw" general="_dBVm8eT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDimY-T6Ee22rp5Kgxfxyw" name="doPost" specification="_dCzmkOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDimZOT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDimZeT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
          <language>java</language>
          <body>String idchack = &quot;닉네임 중복 여부 확인&quot;;&#xD;
		System.out.println(&quot;닉네임체크 두포스트진입:  &quot;+request.getParameter(&quot;nick&quot;));&#xD;
		UsersDaoGun dao = new UsersDaoGun();&#xD;
		&#xD;
		JsonObject jsonObject = new JsonObject();&#xD;
		if(dao.nickDuplicateCheck(request.getParameter(&quot;nick&quot;))) {&#xD;
			System.out.println(&quot;닉네임중복없음&quot;);&#xD;
			jsonObject.addProperty(&quot;nickchack&quot;, &quot;닉네임중복없음&quot;);&#xD;
		}else {&#xD;
			System.out.println(&quot;닉네임중복&quot;);&#xD;
			jsonObject.addProperty(&quot;nickchack&quot;, &quot;닉네임중복&quot;);&#xD;
		}&#xD;
		dao.close();&#xD;
	    response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
     response.getWriter().write(jsonObject.toString());&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dCzmkOT6Ee22rp5Kgxfxyw" name="doPost" visibility="protected" method="_dDimY-T6Ee22rp5Kgxfxyw" raisedException="_dBTxwOT6Ee22rp5Kgxfxyw _dBQucOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dC0NoOT6Ee22rp5Kgxfxyw" name="request" type="_dBW1EeT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dC0NoeT6Ee22rp5Kgxfxyw" name="response" type="_dBYDMOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_c5RQEOT6Ee22rp5Kgxfxyw" name="UsersDaoGun">
        <generalization xmi:id="_dCKGVOT6Ee22rp5Kgxfxyw" general="_c21nIOT6Ee22rp5Kgxfxyw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDimZuT6Ee22rp5Kgxfxyw" name="UsersDaoGun" specification="_c5R3IOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDimZ-T6Ee22rp5Kgxfxyw" type="_c5RQEOT6Ee22rp5Kgxfxyw" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDimaOT6Ee22rp5Kgxfxyw" name="loginProcess" specification="_c5SeMOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDimaeT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDimauT6Ee22rp5Kgxfxyw" name="user_pw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDima-T6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>//customer 가 모델객체입니다.(로그인정보 저장된상태)&#xD;
		String result = &quot;&quot;;&#xD;
		String sql = &quot;select * from users where user_id=? and user_pw=?&quot;;&#xD;
		try {&#xD;
			psmt = con.prepareStatement(sql);&#xD;
			psmt.setString(1,user_id);&#xD;
			psmt.setString(2, user_pw);&#xD;
			rs=psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				result=user_id;&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;로그인 Check중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return result;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDjNcOT6Ee22rp5Kgxfxyw" name="sessionLogin" specification="_c5TFQOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDjNceT6Ee22rp5Kgxfxyw" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDjNcuT6Ee22rp5Kgxfxyw" type="_c4tPYOT6Ee22rp5Kgxfxyw" direction="return"/>
          <language>java</language>
          <body>SessionDto dto = new SessionDto();&#xD;
		String sql=&quot;select * from users where user_idx=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, idx);&#xD;
			rs=psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				dto.setUser_id(rs.getString(&quot;user_id&quot;));&#xD;
				dto.setUser_name(rs.getString(&quot;user_name&quot;));&#xD;
				dto.setUser_nickname(rs.getString(&quot;user_nickname&quot;));&#xD;
				dto.setUser_idx(rs.getString(&quot;user_idx&quot;));&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;유저 정보 조회 중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return dto;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDjNc-T6Ee22rp5Kgxfxyw" name="joinUser" specification="_dCKGUeT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDjNdOT6Ee22rp5Kgxfxyw" name="dto" type="_c4udgOT6Ee22rp5Kgxfxyw"/>
          <ownedParameter xmi:id="_dDjNdeT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int res=0;&#xD;
		String sql = &quot;insert into users(user_id, user_pw, user_name, user_nickname, user_email, user_address, user_phone) values(?,?,?,?,?,?,?)&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, dto.getUser_id());&#xD;
			psmt.setString(2, dto.getUser_pw());&#xD;
			psmt.setString(3, dto.getUser_name());&#xD;
			psmt.setString(4, dto.getUser_nickname());&#xD;
			psmt.setString(5, dto.getUser_email());&#xD;
			psmt.setString(6, dto.getUser_address());&#xD;
			psmt.setString(7, dto.getUser_phone());&#xD;
			res = psmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;회원 가입중 오류&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDj0gOT6Ee22rp5Kgxfxyw" name="idDuplicateCheck" specification="_c5TsUOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDj0geT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0guT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean res = true;&#xD;
		String sql = &quot;select user_id from users where user_id=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, user_id);&#xD;
			rs = psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				res=false;&#xD;
				System.out.println(&quot;중복&quot;);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;중복 체크중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}		&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDj0g-T6Ee22rp5Kgxfxyw" name="nickDuplicateCheck" specification="_c5TsU-T6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDj0hOT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0heT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean res = true;&#xD;
		String sql = &quot;select user_nickname from users where user_nickname=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, user_nickname);&#xD;
			rs = psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				res=false;&#xD;
				System.out.println(&quot;중복&quot;);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;중복 체크중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}		&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDj0huT6Ee22rp5Kgxfxyw" name="idCheck" specification="_c5UTYOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDj0h-T6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0iOT6Ee22rp5Kgxfxyw" name="user_email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0ieT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String res = &quot;정보와 일치하는 아이디 없음&quot;;&#xD;
		String sql = &quot;SELECT user_id FROM users WHERE user_name=? AND user_email=?&quot;;&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, user_name);&#xD;
			psmt.setString(2, user_email);&#xD;
			rs = psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				res=rs.getString(&quot;user_id&quot;);&#xD;
				System.out.println(&quot;있음&quot;);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;아이디찾기중 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}		&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dDj0iuT6Ee22rp5Kgxfxyw" name="pwCheck" specification="_c5U6cOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dDj0i-T6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0jOT6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0jeT6Ee22rp5Kgxfxyw" name="user_email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dDj0juT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String res = &quot;정보와 일치하는 비밀번호 없음&quot;;&#xD;
		String sql = &quot;SELECT user_pw FROM users WHERE user_id=? AND user_name=? AND user_email=?&quot;;&#xD;
		System.out.println(user_id);&#xD;
		System.out.println(user_name);&#xD;
		System.out.println(user_email);&#xD;
		try {&#xD;
			psmt=con.prepareStatement(sql);&#xD;
			psmt.setString(1, user_id);&#xD;
			psmt.setString(2, user_name);&#xD;
			psmt.setString(3, user_email);&#xD;
			rs = psmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				res=rs.getString(&quot;user_pw&quot;);&#xD;
				System.out.println(&quot;있음&quot;);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			System.out.println(&quot;비번찾기 DB 에러&quot;);&#xD;
			e.printStackTrace();&#xD;
		}		&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_c5R3IOT6Ee22rp5Kgxfxyw" name="UsersDaoGun" method="_dDimZuT6Ee22rp5Kgxfxyw">
          <eAnnotations xmi:id="_c5R3IeT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_c5R3IuT6Ee22rp5Kgxfxyw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_c5R3I-T6Ee22rp5Kgxfxyw" type="_c5RQEOT6Ee22rp5Kgxfxyw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_c5SeMOT6Ee22rp5Kgxfxyw" name="loginProcess" method="_dDimaOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_c5SeM-T6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5SeMeT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5SeMuT6Ee22rp5Kgxfxyw" name="user_pw">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_c5TFQOT6Ee22rp5Kgxfxyw" name="sessionLogin" method="_dDjNcOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCKGUOT6Ee22rp5Kgxfxyw" type="_c4tPYOT6Ee22rp5Kgxfxyw" direction="return"/>
          <ownedParameter xmi:id="_c5TFQeT6Ee22rp5Kgxfxyw" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_c5TsUOT6Ee22rp5Kgxfxyw" name="idDuplicateCheck" method="_dDj0gOT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_c5TsUuT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5TsUeT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_c5TsU-T6Ee22rp5Kgxfxyw" name="nickDuplicateCheck" method="_dDj0g-T6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_c5TsVeT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5TsVOT6Ee22rp5Kgxfxyw" name="user_nickname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_c5UTYOT6Ee22rp5Kgxfxyw" name="idCheck" method="_dDj0huT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_c5UTY-T6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5UTYeT6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5UTYuT6Ee22rp5Kgxfxyw" name="user_email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_c5U6cOT6Ee22rp5Kgxfxyw" name="pwCheck" method="_dDj0iuT6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_c5U6dOT6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5U6ceT6Ee22rp5Kgxfxyw" name="user_id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5U6cuT6Ee22rp5Kgxfxyw" name="user_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_c5U6c-T6Ee22rp5Kgxfxyw" name="user_email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dCKGUeT6Ee22rp5Kgxfxyw" name="joinUser" method="_dDjNc-T6Ee22rp5Kgxfxyw">
          <ownedParameter xmi:id="_dCKGU-T6Ee22rp5Kgxfxyw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dCKGUuT6Ee22rp5Kgxfxyw" name="dto" type="_c4udgOT6Ee22rp5Kgxfxyw"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_cdw_0OT6Ee22rp5Kgxfxyw">
      <eAnnotations xmi:id="_cd4UkOT6Ee22rp5Kgxfxyw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_cd6w0OT6Ee22rp5Kgxfxyw" base_Package="_ccqMkOT6Ee22rp5Kgxfxyw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c2874OT6Ee22rp5Kgxfxyw" base_Element="_c28U0OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c2-xEOT6Ee22rp5Kgxfxyw" base_Element="_c28U0OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c2-xEeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c2-xEuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDmQwOT6Ee22rp5Kgxfxyw" value="&quot;/project/commentDelete.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3DCgOT6Ee22rp5Kgxfxyw" base_Element="_c3CbcOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3EQoOT6Ee22rp5Kgxfxyw" base_Element="_c3CbcOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3EQoeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3E3sOT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDmQweT6Ee22rp5Kgxfxyw" value="&quot;/project/commentWrite.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3IiEOT6Ee22rp5Kgxfxyw" base_Element="_c3H7AOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3KXQOT6Ee22rp5Kgxfxyw" base_Element="_c3H7AOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3KXQeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3KXQuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDm30OT6Ee22rp5Kgxfxyw" value="&quot;/project/join.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3PPwOT6Ee22rp5Kgxfxyw" base_Element="_c3OosOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3Qd4OT6Ee22rp5Kgxfxyw" base_Element="_c3OosOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3RE8OT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3RE8eT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDm30eT6Ee22rp5Kgxfxyw" value="&quot;/project/loginCheck.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3VWYOT6Ee22rp5Kgxfxyw" base_Element="_c3UvUOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3WkgOT6Ee22rp5Kgxfxyw" base_Element="_c3UvUOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3WkgeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3WkguT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDm30uT6Ee22rp5Kgxfxyw" value="&quot;/project/logout.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3Zn0OT6Ee22rp5Kgxfxyw" base_Element="_c3YZsOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3a18OT6Ee22rp5Kgxfxyw" base_Element="_c3YZsOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3a18eT6Ee22rp5Kgxfxyw" name="MultipartConfig">
      <annotationParameters xmi:id="_c3a18uT6Ee22rp5Kgxfxyw" name="maxFileSize" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne4OT6Ee22rp5Kgxfxyw" value="1024 * 1024 * 50"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_c3a18-T6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3a19OT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne4eT6Ee22rp5Kgxfxyw" value="&quot;/project/RecipeEdit.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3qGgOT6Ee22rp5Kgxfxyw" base_Element="_c3o4YOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3qtkOT6Ee22rp5Kgxfxyw" base_Element="_c3o4YOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3qtkeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3qtkuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne4uT6Ee22rp5Kgxfxyw" value="&quot;/project/recipeList.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3siwOT6Ee22rp5Kgxfxyw" base_Element="_c3r7sOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3tw4OT6Ee22rp5Kgxfxyw" base_Element="_c3r7sOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3tw4eT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3tw4uT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne4-T6Ee22rp5Kgxfxyw" value="&quot;/project/recipeview.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c3wNIOT6Ee22rp5Kgxfxyw" base_Element="_c3u_AOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c3xbQOT6Ee22rp5Kgxfxyw" base_Element="_c3u_AOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c3xbQeT6Ee22rp5Kgxfxyw" name="MultipartConfig">
      <annotationParameters xmi:id="_c3xbQuT6Ee22rp5Kgxfxyw" name="maxFileSize" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne5OT6Ee22rp5Kgxfxyw" value="1024 * 1024 * 50"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_c3xbQ-T6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c3xbROT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDne5eT6Ee22rp5Kgxfxyw" value="&quot;/project/recipeWrite.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c31FoOT6Ee22rp5Kgxfxyw" base_Element="_c30ekOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c32TwOT6Ee22rp5Kgxfxyw" base_Element="_c30ekOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c32TweT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c32TwuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDoF8OT6Ee22rp5Kgxfxyw" value="&quot;/project/deleteReview.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c33h4OT6Ee22rp5Kgxfxyw" base_Element="_c3260OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c34wAOT6Ee22rp5Kgxfxyw" base_Element="_c3260OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c34wAeT6Ee22rp5Kgxfxyw" name="MultipartConfig">
      <annotationParameters xmi:id="_c35XEOT6Ee22rp5Kgxfxyw" name="maxFileSize" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDoF8eT6Ee22rp5Kgxfxyw" value="1024 * 1024 * 50"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_c35XEeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c35XEuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDoF8uT6Ee22rp5Kgxfxyw" value="&quot;/project/writeReview.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c4i3UeT6Ee22rp5Kgxfxyw" base_Element="_c4iQQOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c4i3UuT6Ee22rp5Kgxfxyw" base_Element="_c4iQQOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c4jeYOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c4oW4OT6Ee22rp5Kgxfxyw" base_Element="_c4nv0OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c4o98OT6Ee22rp5Kgxfxyw" base_Element="_c4nv0OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c4o98eT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c4sBQeT6Ee22rp5Kgxfxyw" base_Element="_c4raMOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c4soUOT6Ee22rp5Kgxfxyw" base_Element="_c4raMOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c4soUeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c5DNoOT6Ee22rp5Kgxfxyw" base_Element="_c5CmkOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c5EbwOT6Ee22rp5Kgxfxyw" base_Element="_c5CmkOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c5EbweT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c5EbwuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDqiMOT6Ee22rp5Kgxfxyw" value="&quot;/user/EmailChack.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c5G4AOT6Ee22rp5Kgxfxyw" base_Element="_c5GQ8OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c5IGIOT6Ee22rp5Kgxfxyw" base_Element="_c5GQ8OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c5IGIeT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c5IGIuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDqiMeT6Ee22rp5Kgxfxyw" value="&quot;/user/findPw2.do&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c5KiYOT6Ee22rp5Kgxfxyw" base_Element="_c5J7UOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c5LJcOT6Ee22rp5Kgxfxyw" base_Element="_c5J7UOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c5LJceT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c5LJcuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDqiMuT6Ee22rp5Kgxfxyw" value="&quot;/user/IdChack&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c5NlsOT6Ee22rp5Kgxfxyw" base_Element="_c5M-oOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c5OMwOT6Ee22rp5Kgxfxyw" base_Element="_c5M-oOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c5OMweT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c5OMwuT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDqiM-T6Ee22rp5Kgxfxyw" value="&quot;/user/IdPwChack&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_c5Pa4OT6Ee22rp5Kgxfxyw" base_Element="_c5Oz0OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_c5QB8OT6Ee22rp5Kgxfxyw" base_Element="_c5Oz0OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_c5QB8eT6Ee22rp5Kgxfxyw" name="WebServlet">
      <annotationParameters xmi:id="_c5QB8uT6Ee22rp5Kgxfxyw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dDrJQOT6Ee22rp5Kgxfxyw" value="&quot;/user/NickChack&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dBIyoOT6Ee22rp5Kgxfxyw" base_Element="_dBHkgOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBKn0OT6Ee22rp5Kgxfxyw" base_Element="_dBJZsOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBL18OT6Ee22rp5Kgxfxyw" base_Element="_dBKn0eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBMdAOT6Ee22rp5Kgxfxyw" base_Element="_dBL18eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBNrIOT6Ee22rp5Kgxfxyw" base_Element="_dBNEEOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBOSMOT6Ee22rp5Kgxfxyw" base_Element="_dBNrIeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBO5QOT6Ee22rp5Kgxfxyw" base_Element="_dBOSMeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBPgUOT6Ee22rp5Kgxfxyw" base_Element="_dBO5QeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBR8kOT6Ee22rp5Kgxfxyw" base_Element="_dBQucOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBTKsOT6Ee22rp5Kgxfxyw" base_Element="_dBR8keT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBUY0OT6Ee22rp5Kgxfxyw" base_Element="_dBTxwOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBVm8OT6Ee22rp5Kgxfxyw" base_Element="_dBUY0eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBW1EOT6Ee22rp5Kgxfxyw" base_Element="_dBVm8eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBXcIOT6Ee22rp5Kgxfxyw" base_Element="_dBW1EeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBYDMeT6Ee22rp5Kgxfxyw" base_Element="_dBYDMOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBYqQeT6Ee22rp5Kgxfxyw" base_Element="_dBYqQOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBdiwOT6Ee22rp5Kgxfxyw" base_Element="_dBc7sOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBhNIOT6Ee22rp5Kgxfxyw" base_Element="_dBgmEOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBh0MOT6Ee22rp5Kgxfxyw" base_Element="_dBhNIeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBibQOT6Ee22rp5Kgxfxyw" base_Element="_dBh0MeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBjCUOT6Ee22rp5Kgxfxyw" base_Element="_dBibQeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBjpYOT6Ee22rp5Kgxfxyw" base_Element="_dBjCUeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBmFoOT6Ee22rp5Kgxfxyw" base_Element="_dBlekOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBmssOT6Ee22rp5Kgxfxyw" base_Element="_dBmFoeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBnTwOT6Ee22rp5Kgxfxyw" base_Element="_dBmsseT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dBn60OT6Ee22rp5Kgxfxyw" base_Element="_dBnTweT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB2kUOT6Ee22rp5Kgxfxyw" base_Element="_dB19QOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB4ZgOT6Ee22rp5Kgxfxyw" base_Element="_dB3ycOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB6OseT6Ee22rp5Kgxfxyw" base_Element="_dB6OsOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB61weT6Ee22rp5Kgxfxyw" base_Element="_dB61wOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB8q8OT6Ee22rp5Kgxfxyw" base_Element="_dB8D4OT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB9SAOT6Ee22rp5Kgxfxyw" base_Element="_dB8q8eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB95EOT6Ee22rp5Kgxfxyw" base_Element="_dB9SAeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB-gIOT6Ee22rp5Kgxfxyw" base_Element="_dB95EeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB-gIuT6Ee22rp5Kgxfxyw" base_Element="_dB-gIeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB_HMOT6Ee22rp5Kgxfxyw" base_Element="_dB-gI-T6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dB_uQeT6Ee22rp5Kgxfxyw" base_Element="_dB_uQOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dCAVUOT6Ee22rp5Kgxfxyw" base_Element="_dB_uQuT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dCA8YOT6Ee22rp5Kgxfxyw" base_Element="_dCAVUeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dCDYoOT6Ee22rp5Kgxfxyw" base_Element="_dCCxkOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dCD_sOT6Ee22rp5Kgxfxyw" base_Element="_dCDYoeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dCD_suT6Ee22rp5Kgxfxyw" base_Element="_dCD_seT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_dCWTkOT6Ee22rp5Kgxfxyw" base_Element="_dCTQQOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCWTkeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCW6o-T6Ee22rp5Kgxfxyw" base_Element="_dCW6oOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCW6pOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCYIwOT6Ee22rp5Kgxfxyw" base_Element="_dCXhseT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCYIweT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCZW4eT6Ee22rp5Kgxfxyw" base_Element="_dCYv0OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCZ98OT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCbMEOT6Ee22rp5Kgxfxyw" base_Element="_dCalAOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCbMEeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCbzIOT6Ee22rp5Kgxfxyw" base_Element="_dCbMEuT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCbzIeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCdBQOT6Ee22rp5Kgxfxyw" base_Element="_dCcaMOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCdBQeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCdoU-T6Ee22rp5Kgxfxyw" base_Element="_dCdoUOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCdoVOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCePY-T6Ee22rp5Kgxfxyw" base_Element="_dCePYOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCePZOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCfdg-T6Ee22rp5Kgxfxyw" base_Element="_dCfdgOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCfdhOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCgroOT6Ee22rp5Kgxfxyw" base_Element="_dCgEkeT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCgroeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCh5wOT6Ee22rp5Kgxfxyw" base_Element="_dChSsOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCh5weT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCjH4OT6Ee22rp5Kgxfxyw" base_Element="_dCig0OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCjH4eT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCkWAOT6Ee22rp5Kgxfxyw" base_Element="_dCju8OT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCkWAeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dClkIOT6Ee22rp5Kgxfxyw" base_Element="_dCk9EOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dClkIeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCmLMOT6Ee22rp5Kgxfxyw" base_Element="_dClkIuT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCmLMeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dCnZUOT6Ee22rp5Kgxfxyw" genericsValue="String,Object" base_Element="_dCmyQeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Generics xmi:id="_dCuHAOT6Ee22rp5Kgxfxyw" genericsValue="String,String" base_Element="_dCtf8eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Annotations xmi:id="_dCuuE-T6Ee22rp5Kgxfxyw" base_Element="_dCuuEOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCvVIOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCv8MOT6Ee22rp5Kgxfxyw" base_Element="_dCvVIeT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCv8MeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCxKUOT6Ee22rp5Kgxfxyw" base_Element="_dCwjQOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCxKUeT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCxxY-T6Ee22rp5Kgxfxyw" base_Element="_dCxxYOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCxxZOT6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dCy_guT6Ee22rp5Kgxfxyw" base_Element="_dCyYceT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dCy_g-T6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_dC0NouT6Ee22rp5Kgxfxyw" base_Element="_dCzmkOT6Ee22rp5Kgxfxyw">
    <annotations xmi:id="_dC0No-T6Ee22rp5Kgxfxyw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dC34AeT6Ee22rp5Kgxfxyw" base_Element="_dC34AOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dC4fEeT6Ee22rp5Kgxfxyw" base_Element="_dC4fEOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dC4fE-T6Ee22rp5Kgxfxyw" base_Element="_dC4fEuT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dC5GIeT6Ee22rp5Kgxfxyw" base_Element="_dC5GIOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dDKL4OT6Ee22rp5Kgxfxyw" base_Element="_dDJk0eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dDKy8OT6Ee22rp5Kgxfxyw" base_Element="_dDKL4eT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD0TMuT6Ee22rp5Kgxfxyw" base_Element="_dD0TMOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD06QuT6Ee22rp5Kgxfxyw" base_Element="_dD06QOT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD1hUOT6Ee22rp5Kgxfxyw" base_Element="_dD06Q-T6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD2vcOT6Ee22rp5Kgxfxyw" base_Element="_dD1hUeT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD3WgOT6Ee22rp5Kgxfxyw" base_Element="_dD2vceT6Ee22rp5Kgxfxyw"/>
  <UMLLabProfile:Reference xmi:id="_dD4koOT6Ee22rp5Kgxfxyw" base_Element="_dD39kOT6Ee22rp5Kgxfxyw"/>
</xmi:XMI>
